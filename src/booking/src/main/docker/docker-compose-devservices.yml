services:
  # --------- Postgres ---------
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "40001:5432"
    networks:
      - concertify-network
    command: postgres -c 'max_connections=500'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ldnhan -d postgres" ]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    restart: always
    volumes:
      - ./postgres/init-db:/docker-entrypoint-initdb.d:ro
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ldnhan
      POSTGRES_PASSWORD: 123

  # --------- Keycloak ---------
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    depends_on:
      postgres:
        condition: service_healthy
      keycloak_certgen:
        condition: service_completed_successfully
    ports:
      - "40000:8000" # HTTP
      - "9990:9990" # Management port
    networks:
      - concertify-network
    command: ["start-dev", "--health-enabled=true", "--import-realm"]
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9990; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9990\r\nConnection: close\r\n\r\n' >&3; cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    restart: always
    volumes:
      - ./keycloak/test-realms.json:/opt/keycloak/data/import/realms-import.json
    environment:
      KC_HTTP_MANAGEMENT_PORT: 9990
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: ldnhan
      KC_BOOTSTRAP_ADMIN_PASSWORD: 123
      KC_PROXY: edge
      KC_CORS: 'true'
      KC_CORS_ORIGINS: '*'
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realms-import.json
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: ldnhan
      KC_DB_PASSWORD: 123

volumes:
  postgres-data:

networks:
  auth-network: