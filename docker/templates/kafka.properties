ssl.enabled.protocols=TLSv1.2
ssl.truststore.password=120103
listener.name.external.oauthbearer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
listener.name.internal.sasl.oauthbearer.groups.claim.name=groups
sasl.oauthbearer.scope.claim.name=scope
broker.users=User:kafka
listener.name.external.sasl.oauthbearer.expected.audience=account
controller.listener.names=CONTROLLER
listener.name.external.ssl.principal.mapping.rules=RULE:^CN=([a-zA-Z0-9]*).*$/$1/L,DEFAULT
ssl.cipher.suites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
listener.name.internal.ssl.truststore.location=/etc/kafka/secrets/truststore.p12
listener.name.internal.ssl.endpoint.identification.algorithm=https
num.recovery.threads.per.data.dir=2
default.replication.factor=1
sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
config.providers=file
ssl.keystore.password=120103
listener.name.internal.sasl.oauthbearer.sub.claim.name=sub
super.users=User:kafka;User:control-center-sso
ssl.keystore.credentials=creds.txt
auto.create.topics.enabled=true
listener.name.internal.oauthbearer.sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
offsets.commit.timeout.ms=10000
listener.name.controller.ssl.keystore.password=120103
ssl.key.password=120103
listener.name.internal.sasl.oauthbearer.token.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/token
log.segment.bytes=1073741824
delete.topic.enabled=true
listener.name.controller.ssl.keystore.type=PKCS12
listener.name.internal.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    oauth.client.id="kafka" \
    oauth.client.secret="kafka-secret" \
    oauth.token.endpoint.uri="https://keycloak:8443/realms/kafka/protocol/openid-connect/token" \
    oauth.jwks.endpoint.uri="https://keycloak:8443/realms/kafka/protocol/openid-connect/certs" \
    oauth.expected.audience="account" \
    oauth.valid.issuer.uri="https://keycloak:8443/realms/kafka" \
    principalClaimName="sub" \
    refresh_ms="3000" \
    oauth.ssl.endpoint.identification.algorithm="https" \
    oauth.ssl.keystore.type="PKCS12" \
    oauth.ssl.keystore.location="/etc/kafka/secrets/keystore.p12" \
    oauth.ssl.keystore.password="120103" \
    oauth.ssl.key.password="120103"  \
    oauth.ssl.truststore.type="PKCS12" \
    oauth.ssl.truststore.location="/etc/kafka/secrets/truststore.p12" \
    oauth.ssl.truststore.password="120103";

advertised.listeners=INTERNAL://broker1:29091,EXTERNAL://broker1:39091
listener.name.external.sasl.oauthbearer.token.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/token
inter.broker.listener.name=INTERNAL
min.insync.replicas=2
sasl.oauthbearer.expected.audience=account
listener.name.external.principal.builder.class=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
listener.name.external.ssl.key.password=120103
listener.name.internal.ssl.keystore.type=PKCS12
listener.name.external.ssl.client.auth=required
controller.quorum.voters=1@broker1:19091
ssl.keystore.location=/etc/kafka/secrets/keystore.p12
ssl.key.credentials=creds.txt
listener.name.internal.ssl.keystore.location=/etc/kafka/secrets/keystore.p12
listener.name.internal.sasl.oauthbearer.expected.audience=account
listener.name.controller.ssl.keystore.location=/etc/kafka/secrets/keystore.p12
sasl.oauthbearer.token.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/token
listener.name.external.ssl.endpoint.identification.algorithm=https
listener.name.external.ssl.truststore.password=120103
listener.name.controller.ssl.client.auth=required
sasl.oauthbearer.expected.issuer=https://keycloak:8443/realms/kafka
listener.name.controller.ssl.truststore.type=PKCS12
listener.name.internal.ssl.client.auth=required
ssl.endpoint.identification.algorithm=https
log.dirs=/tmp/kraft-combined-logs
transaction.state.log.min.isr=1
listener.name.internal.ssl.keystore.password=120103
listener.name.internal.ssl.key.password=120103
listener.name.internal.principal.builder.class=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
heap.opts=-Xms1G -Xmx1G
listener.name.external.ssl.keystore.type=PKCS12
listener.name.external.sasl.oauthbearer.sub.claim.name=sub
listener.name.external.oauthbearer.sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
group.initial.rebalance.delay.ms=0
listener.name.external.ssl.keystore.password=120103
ssl.client.auth=required
group.max.session.timeout.ms=300000
ssl.truststore.type=PKCS12
ssl.truststore.location=/etc/kafka/secrets/truststore.p12
listeners=CONTROLLER://broker1:19091,INTERNAL://broker1:29091,EXTERNAL://broker1:39091
log.retention.hours=1
ssl.keystore.type=PKCS12
principal.builder.class=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
ssl.truststore.filename=truststore.p12
sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
listener.name.external.ssl.truststore.location=/etc/kafka/secrets/truststore.p12
listener.name.internal.ssl.principal.mapping.rules=RULE:^CN=([a-zA-Z0-9]*).*$/$1/L,DEFAULT
num.network.threads=1
sasl.oauthbearer.sub.claim.name=sub
replica.lag.time.max.ms=30000
log.retention.check.interval.ms=300000
listener.name.internal.sasl.oauthbearer.jwks.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/certs
listener.name.external.ssl.keystore.location=/etc/kafka/secrets/keystore.p12
sasl.mechanism.inter.broker.protocol=OAUTHBEARER
transaction.state.log.replication.factor=1
listener.name.external.sasl.oauthbearer.expected.issuer=https://keycloak:8443/realms/kafka
num.io.threads=4
listener.name.external.ssl.truststore.type=PKCS12
listener.name.internal.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.external.sasl.oauthbearer.groups.claim.name=groups
listener.name.external.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    oauth.client.id="kafka" \
    oauth.client.secret="kafka-secret" \
    oauth.token.endpoint.uri="https://keycloak:8443/realms/kafka/protocol/openid-connect/token" \
    oauth.jwks.endpoint.uri="https://keycloak:8443/realms/kafka/protocol/openid-connect/certs" \
    oauth.expected.audience="account" \
    oauth.valid.issuer.uri="https://keycloak:8443/realms/kafka" \
    principalClaimName="sub" \
    refresh_ms="3000" \
    oauth.ssl.endpoint.identification.algorithm="https" \
    oauth.ssl.keystore.type="PKCS12" \
    oauth.ssl.keystore.location="/etc/kafka/secrets/keystore.p12" \
    oauth.ssl.keystore.password="120103" \
    oauth.ssl.key.password="120103"  \
    oauth.ssl.truststore.type="PKCS12" \
    oauth.ssl.truststore.location="/etc/kafka/secrets/truststore.p12" \
    oauth.ssl.truststore.password="120103";

offsets.topic.replication.factor=1
listener.name.internal.sasl.oauthbearer.expected.issuer=https://keycloak:8443/realms/kafka
listener.name.controller.ssl.truststore.password=120103
offsets.retention.minutes=10080
listener.name.internal.ssl.truststore.password=120103
listener.name.internal.oauthbearer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
sasl.oauthbearer.jwks.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/certs
listener.security.protocol.map=CONTROLLER:SSL,INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL
listener.name.internal.ssl.truststore.type=PKCS12
listener.name.controller.ssl.truststore.location=/etc/kafka/secrets/truststore.p12
sasl.enabled.mechanisms=OAUTHBEARER
listener.name.external.sasl.oauthbearer.jwks.endpoint.url=https://keycloak:8443/realms/kafka/protocol/openid-connect/certs
config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
ssl.keystore.filename=keystore.p12
listener.name.external.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.controller.ssl.key.password=120103
offsets.topic.compression.codec=1
broker.id=1
ssl.truststore.credentials=creds.txt
process.roles=broker,controller
listener.name.controller.ssl.endpoint.identification.algorithm=https