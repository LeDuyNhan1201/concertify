[

  {
    "id" : "bd79e398-c160-4285-a6a5-1841f120069a",
    "realm" : "kafka",
    "notBefore" : 0,
    "defaultSignatureAlgorithm" : "RS256",
    "revokeRefreshToken" : false,
    "refreshTokenMaxReuse" : 0,
    "accessTokenLifespan" : 300,
    "accessTokenLifespanForImplicitFlow" : 900,
    "ssoSessionIdleTimeout" : 1800,
    "ssoSessionMaxLifespan" : 36000,
    "ssoSessionIdleTimeoutRememberMe" : 0,
    "ssoSessionMaxLifespanRememberMe" : 0,
    "offlineSessionIdleTimeout" : 2592000,
    "offlineSessionMaxLifespanEnabled" : false,
    "offlineSessionMaxLifespan" : 5184000,
    "clientSessionIdleTimeout" : 0,
    "clientSessionMaxLifespan" : 0,
    "clientOfflineSessionIdleTimeout" : 0,
    "clientOfflineSessionMaxLifespan" : 0,
    "accessCodeLifespan" : 60,
    "accessCodeLifespanUserAction" : 300,
    "accessCodeLifespanLogin" : 1800,
    "actionTokenGeneratedByAdminLifespan" : 43200,
    "actionTokenGeneratedByUserLifespan" : 300,
    "oauth2DeviceCodeLifespan" : 600,
    "oauth2DevicePollingInterval" : 5,
    "enabled" : true,
    "sslRequired" : "external",
    "registrationAllowed" : false,
    "registrationEmailAsUsername" : false,
    "rememberMe" : false,
    "verifyEmail" : false,
    "loginWithEmailAllowed" : true,
    "duplicateEmailsAllowed" : false,
    "resetPasswordAllowed" : false,
    "editUsernameAllowed" : false,
    "bruteForceProtected" : false,
    "permanentLockout" : false,
    "maxTemporaryLockouts" : 0,
    "bruteForceStrategy" : "MULTIPLE",
    "maxFailureWaitSeconds" : 900,
    "minimumQuickLoginWaitSeconds" : 60,
    "waitIncrementSeconds" : 60,
    "quickLoginCheckMilliSeconds" : 1000,
    "maxDeltaTimeSeconds" : 43200,
    "failureFactor" : 30,
    "roles" : {
      "realm" : [ {
        "id" : "ab6d4bab-2aaa-4d01-a4fd-90b39d370112",
        "name" : "offline_access",
        "description" : "${role_offline-access}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "bd79e398-c160-4285-a6a5-1841f120069a",
        "attributes" : { }
      }, {
        "id" : "33d101a3-35b9-4b4b-92ce-d71bef819dda",
        "name" : "default-roles-kafka",
        "description" : "${role_default-roles}",
        "composite" : true,
        "composites" : {
          "realm" : [ "offline_access", "uma_authorization" ],
          "client" : {
            "account" : [ "view-profile", "manage-account" ]
          }
        },
        "clientRole" : false,
        "containerId" : "bd79e398-c160-4285-a6a5-1841f120069a",
        "attributes" : { }
      }, {
        "id" : "377f9a9f-3e12-4bcd-a7e4-fc4e4cf8d083",
        "name" : "uma_authorization",
        "description" : "${role_uma_authorization}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "bd79e398-c160-4285-a6a5-1841f120069a",
        "attributes" : { }
      } ],
      "client" : {
        "control-center" : [ ],
        "realm-management" : [ {
          "id" : "5115f194-bbc7-4593-819b-fd193c325791",
          "name" : "realm-admin",
          "description" : "${role_realm-admin}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "manage-identity-providers", "query-groups", "query-realms", "manage-events", "view-events", "query-users", "view-clients", "view-identity-providers", "query-clients", "impersonation", "manage-users", "view-authorization", "create-client", "manage-realm", "manage-authorization", "view-users", "manage-clients", "view-realm" ]
            }
          },
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "90d003a8-f9d3-4fa3-a67f-1537a4bbf9b5",
          "name" : "manage-identity-providers",
          "description" : "${role_manage-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "f6c28ca9-31e2-4cb6-9b22-2469b0628d12",
          "name" : "query-groups",
          "description" : "${role_query-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "91122d40-7fff-4e34-9e65-568017a7e1e6",
          "name" : "query-realms",
          "description" : "${role_query-realms}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "d8df3327-ed03-4b16-9ded-6348a54ec586",
          "name" : "manage-events",
          "description" : "${role_manage-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "3f597e8b-3526-4cb8-bb1e-751465dbd522",
          "name" : "view-events",
          "description" : "${role_view-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "f4c59e48-a37d-43ed-8223-b502ea7dfd52",
          "name" : "query-users",
          "description" : "${role_query-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "2d4bd711-a0c1-43a9-876b-f20facf6afcf",
          "name" : "view-clients",
          "description" : "${role_view-clients}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "query-clients" ]
            }
          },
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "7c2fb9aa-df0f-40b8-8213-2cfd9a13b57b",
          "name" : "view-identity-providers",
          "description" : "${role_view-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "add47c0f-3527-491b-aeb5-579ae12c7e68",
          "name" : "query-clients",
          "description" : "${role_query-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "66b7ee9e-1aed-4d8b-a0c1-8c25451fcabf",
          "name" : "impersonation",
          "description" : "${role_impersonation}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "c7d3eb97-6d18-4bd8-978a-85c5ffffefa7",
          "name" : "manage-users",
          "description" : "${role_manage-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "27dfba3c-54f4-4509-a569-2a0cc4a16e88",
          "name" : "view-authorization",
          "description" : "${role_view-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "ab29e3eb-2834-4877-807e-fb5d11d060a1",
          "name" : "create-client",
          "description" : "${role_create-client}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "29ed9a1b-859a-4605-94a4-ce51879324b1",
          "name" : "manage-realm",
          "description" : "${role_manage-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "5b2eea91-1f39-4fb0-b800-75b77f202732",
          "name" : "manage-authorization",
          "description" : "${role_manage-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "8f8a09cc-abdf-4512-bb6f-dfc9069f7b88",
          "name" : "view-users",
          "description" : "${role_view-users}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "query-groups", "query-users" ]
            }
          },
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "adf58c85-dffa-4fbb-92dc-04105ebe6f22",
          "name" : "manage-clients",
          "description" : "${role_manage-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        }, {
          "id" : "8842b4e1-fd7d-487d-a54c-b139ad2bd6f7",
          "name" : "view-realm",
          "description" : "${role_view-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
          "attributes" : { }
        } ],
        "control-center-sso" : [ {
          "id" : "a62f0bca-832e-4aea-8922-2c973bce4e52",
          "name" : "Administrator",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45a8853e-5bef-4abd-a448-7bb4e4c1e31c",
          "attributes" : { }
        } ],
        "security-admin-console" : [ ],
        "kafka" : [ ],
        "quarkus" : [ ],
        "schema-registry" : [ ],
        "admin-cli" : [ ],
        "account-console" : [ ],
        "broker" : [ {
          "id" : "baf18bab-0f74-4b18-83dd-6dbe22b50537",
          "name" : "read-token",
          "description" : "${role_read-token}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8c4ea290-f7a0-4483-a938-6e475664d3cb",
          "attributes" : { }
        } ],
        "rest-proxy" : [ ],
        "account" : [ {
          "id" : "cba63f78-ef95-4bac-9bba-a363f5740dd0",
          "name" : "manage-consent",
          "description" : "${role_manage-consent}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [ "view-consent" ]
            }
          },
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "a1206f3b-daf4-4cc9-944c-87b94b012f6f",
          "name" : "view-groups",
          "description" : "${role_view-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "e4420d59-fc7f-4620-becf-724d3d4c5122",
          "name" : "view-applications",
          "description" : "${role_view-applications}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "0dfcc4fd-461d-4412-8cdb-b8a4c323207e",
          "name" : "view-profile",
          "description" : "${role_view-profile}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "ed958a77-5fa7-45f1-81b4-51104301439e",
          "name" : "manage-account",
          "description" : "${role_manage-account}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [ "manage-account-links" ]
            }
          },
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "083c8e07-d504-41e3-98da-0e1bcedae657",
          "name" : "view-consent",
          "description" : "${role_view-consent}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "25d55872-679a-44a6-aa45-1c89b6beb3e7",
          "name" : "delete-account",
          "description" : "${role_delete-account}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        }, {
          "id" : "ff8a7887-450a-484a-b996-762c64a3d669",
          "name" : "manage-account-links",
          "description" : "${role_manage-account-links}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "7ead13df-fb80-4034-9863-9c9775dd456b",
          "attributes" : { }
        } ]
      }
    },
    "groups" : [ {
      "id" : "935c8103-1bcb-407e-b533-1db0ed0e7df8",
      "name" : "clients",
      "path" : "/clients",
      "subGroups" : [ ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    }, {
      "id" : "19e8b3aa-b86d-407c-8bbe-6872fcd034ad",
      "name" : "sso-users",
      "path" : "/sso-users",
      "subGroups" : [ ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    }, {
      "id" : "938840ab-04b6-4fc8-a960-b883ce8be164",
      "name" : "superusers",
      "path" : "/superusers",
      "subGroups" : [ ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    }, {
      "id" : "124fb67f-80ac-4124-81de-9ab7c6d79da0",
      "name" : "users",
      "path" : "/users",
      "subGroups" : [ ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    } ],
    "defaultRole" : {
      "id" : "33d101a3-35b9-4b4b-92ce-d71bef819dda",
      "name" : "default-roles-kafka",
      "description" : "${role_default-roles}",
      "composite" : true,
      "clientRole" : false,
      "containerId" : "bd79e398-c160-4285-a6a5-1841f120069a"
    },
    "requiredCredentials" : [ "password" ],
    "otpPolicyType" : "totp",
    "otpPolicyAlgorithm" : "HmacSHA1",
    "otpPolicyInitialCounter" : 0,
    "otpPolicyDigits" : 6,
    "otpPolicyLookAheadWindow" : 1,
    "otpPolicyPeriod" : 30,
    "otpPolicyCodeReusable" : false,
    "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
    "localizationTexts" : { },
    "webAuthnPolicyRpEntityName" : "keycloak",
    "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
    "webAuthnPolicyRpId" : "",
    "webAuthnPolicyAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyRequireResidentKey" : "not specified",
    "webAuthnPolicyUserVerificationRequirement" : "not specified",
    "webAuthnPolicyCreateTimeout" : 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyAcceptableAaguids" : [ ],
    "webAuthnPolicyExtraOrigins" : [ ],
    "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
    "webAuthnPolicyPasswordlessRpId" : "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout" : 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
    "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
    "users" : [ {
      "id" : "abcb9d81-54d9-493e-b27e-1a2b7dec2ba2",
      "username" : "c3superuser",
      "emailVerified" : false,
      "createdTimestamp" : 1751690597978,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "8264943b-8dbc-4e74-a91d-2b256d8ce0ed",
        "type" : "password",
        "userLabel" : "My password",
        "createdDate" : 1751690627235,
        "secretData" : "{\"value\":\"9qCPfmcnSgywblEdrgfoS8W6XgYrQ7ujIWEqsT7kl6A=\",\"salt\":\"EBUSFdvR0zPPbnWYzY9jSA==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/sso-users" ]
    }, {
      "id" : "control-center",
      "username" : "service-account-control-center",
      "emailVerified" : false,
      "createdTimestamp" : 1751690178070,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "control-center",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/clients" ]
    }, {
      "id" : "kafka",
      "username" : "service-account-kafka",
      "emailVerified" : false,
      "createdTimestamp" : 1751689807175,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "kafka",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/clients", "/superusers" ]
    }, {
      "id" : "quarkus",
      "username" : "service-account-quarkus",
      "emailVerified" : false,
      "createdTimestamp" : 1751689507343,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "quarkus",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/clients" ]
    }, {
      "id" : "rest-proxy",
      "username" : "service-account-rest-proxy",
      "emailVerified" : false,
      "createdTimestamp" : 1751690062363,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "rest-proxy",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/clients" ]
    }, {
      "id" : "schema-registry",
      "username" : "service-account-schema-registry",
      "emailVerified" : false,
      "createdTimestamp" : 1751689722495,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "schema-registry",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-kafka" ],
      "notBefore" : 0,
      "groups" : [ "/clients" ]
    } ],
    "scopeMappings" : [ {
      "clientScope" : "offline_access",
      "roles" : [ "offline_access" ]
    } ],
    "clientScopeMappings" : {
      "account" : [ {
        "client" : "account-console",
        "roles" : [ "manage-account", "view-groups" ]
      } ]
    },
    "clients" : [ {
      "id" : "7ead13df-fb80-4034-9863-9c9775dd456b",
      "clientId" : "account",
      "name" : "${client_account}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/kafka/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/realms/kafka/account/*" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "b58b2988-d6af-41ae-94d7-f0bbcad1b665",
      "clientId" : "account-console",
      "name" : "${client_account-console}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/kafka/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/realms/kafka/account/*" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "post.logout.redirect.uris" : "+",
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [ {
        "id" : "08cc3a80-09b1-47c8-843a-fb25ee43adb2",
        "name" : "audience resolve",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-audience-resolve-mapper",
        "consentRequired" : false,
        "config" : { }
      } ],
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "d5593a17-3c7f-439a-a695-307be9798564",
      "clientId" : "admin-cli",
      "name" : "${client_admin-cli}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "client.use.lightweight.access.token.enabled" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "8c4ea290-f7a0-4483-a938-6e475664d3cb",
      "clientId" : "broker",
      "name" : "${client_broker}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "f370a16d-2355-4414-a05c-351e3515c940",
      "clientId" : "control-center",
      "name" : "client_control-center",
      "description" : "App for Confluent Control Center acting as client",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "control-center-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751690178",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "45a8853e-5bef-4abd-a448-7bb4e4c1e31c",
      "clientId" : "control-center-sso",
      "name" : "client_control-center-sso",
      "description" : "Client used for SSO Login",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "control-center-sso-secret",
      "redirectUris" : [ "https://localhost:9021/api/metadata/security/1.0/oidc/authorization-code/callback", "https://127.0.0.1:9021/api/metadata/security/1.0/oidc/authorization-code/callback", "https://control-center:9021/api/metadata/security/1.0/oidc/authorization-code/callback" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751690403",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "true",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "d50054d5-548f-4a49-9050-0adb1279030d",
      "clientId" : "kafka",
      "name" : "client_kafka",
      "description" : "Superuser for Kafka Server",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "kafka-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751689807",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "742a1330-9e01-4134-b696-f0fc099b2be4",
      "clientId" : "quarkus",
      "name" : "client_quarkus",
      "description" : "Quarkus app for client credentials OAuth flow",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "quarkus-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751689507",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "cfd299a8-5288-4c6c-b22e-7e97e4e4c592",
      "clientId" : "realm-management",
      "name" : "${client_realm-management}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "b0084114-794a-4581-81e7-a0cbd7472313",
      "clientId" : "rest-proxy",
      "name" : "client_rest-proxy",
      "description" : "App for Kafka Rest Proxy acting as client",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "rest-proxy-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751690062",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "a7440fe9-32a0-4dae-9563-6b780427fb53",
      "clientId" : "schema-registry",
      "name" : "client_schema-registry",
      "description" : "App for Schema Registry acting as client",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "schema-registry-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1751689722",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    }, {
      "id" : "177213dc-a290-4518-b38f-443367ccf1dd",
      "clientId" : "security-admin-console",
      "name" : "${client_security-admin-console}",
      "rootUrl" : "${authAdminUrl}",
      "baseUrl" : "/admin/kafka/console/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/admin/kafka/console/*" ],
      "webOrigins" : [ "+" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "client.use.lightweight.access.token.enabled" : "true",
        "post.logout.redirect.uris" : "+",
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [ {
        "id" : "9842bc6d-ad2b-41f6-9830-bd7c274835be",
        "name" : "locale",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "locale",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "locale",
          "jsonType.label" : "String"
        }
      } ],
      "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
    } ],
    "clientScopes" : [ {
      "id" : "d88a809a-db9c-4864-a563-6b928ff870e3",
      "name" : "phone",
      "description" : "OpenID Connect built-in scope: phone",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${phoneScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "c2c50f36-a602-4728-9d6a-7ddcb00b3f25",
        "name" : "phone number",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "phoneNumber",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "phone_number",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "c49a155a-a9e8-4d2b-9115-14ec2a8cf1b8",
        "name" : "phone number verified",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "phoneNumberVerified",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "phone_number_verified",
          "jsonType.label" : "boolean"
        }
      } ]
    }, {
      "id" : "c11618a8-9050-4228-ac60-7ac666f331bb",
      "name" : "microprofile-jwt",
      "description" : "Microprofile - JWT built-in scope",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "af0371a2-b7ac-4ebd-8a58-57c377c5aecb",
        "name" : "upn",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "username",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "upn",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "0aa1fc0f-d8af-4230-956d-4f806a8478d9",
        "name" : "groups",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-realm-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "foo",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "groups",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "be1d8f38-a6dd-4629-9436-15e29709fd05",
      "name" : "basic",
      "description" : "OpenID Connect scope for add all basic claims to the token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "38f30316-3ffe-475d-a81e-f4e2133eb6e1",
        "name" : "auth_time",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "AUTH_TIME",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "auth_time",
          "jsonType.label" : "long"
        }
      }, {
        "id" : "92e27e76-d8ac-4284-b0c7-29952054039f",
        "name" : "sub",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-sub-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      } ]
    }, {
      "id" : "74c368c3-726d-4916-87f8-cce778f49cfe",
      "name" : "acr",
      "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "c0892454-9ddc-48ef-94fa-39488f72d1e7",
        "name" : "acr loa level",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-acr-mapper",
        "consentRequired" : false,
        "config" : {
          "id.token.claim" : "true",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "userinfo.token.claim" : "true"
        }
      } ]
    }, {
      "id" : "8ac1f76e-6599-4968-ab6f-5d3e1bae5ebf",
      "name" : "web-origins",
      "description" : "OpenID Connect scope for add allowed web origins to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "consent.screen.text" : "",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "7e60f401-18d5-4aa5-9023-78ba568ae302",
        "name" : "allowed web origins",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-allowed-origins-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      } ]
    }, {
      "id" : "841d4873-48e3-4e8c-9790-a0cf9c6221b1",
      "name" : "offline_access",
      "description" : "OpenID Connect built-in scope: offline_access",
      "protocol" : "openid-connect",
      "attributes" : {
        "consent.screen.text" : "${offlineAccessScopeConsentText}",
        "display.on.consent.screen" : "true"
      }
    }, {
      "id" : "da5c7410-d10d-4767-b14b-a6e9933680ee",
      "name" : "organization",
      "description" : "Additional claims about the organization a subject belongs to",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${organizationScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "d074609e-48d3-4c29-bf18-2ba754d36439",
        "name" : "organization",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-organization-membership-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "organization",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "93970e0e-2f66-4585-b802-777a8b15d7df",
      "name" : "email",
      "description" : "OpenID Connect built-in scope: email",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${emailScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "6ee6a3e2-9f9c-4e09-97b5-bc609b685281",
        "name" : "email verified",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "emailVerified",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "email_verified",
          "jsonType.label" : "boolean"
        }
      }, {
        "id" : "c4ea263f-0dd3-41a2-a128-6101edbd49f6",
        "name" : "email",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "email",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "email",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "1cefac86-0b67-4c8c-b7be-faa9a8d442c2",
      "name" : "address",
      "description" : "OpenID Connect built-in scope: address",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${addressScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "fb3b4c82-69d8-44d5-b861-aee3f78fd372",
        "name" : "address",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-address-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute.formatted" : "formatted",
          "user.attribute.country" : "country",
          "introspection.token.claim" : "true",
          "user.attribute.postal_code" : "postal_code",
          "userinfo.token.claim" : "true",
          "user.attribute.street" : "street",
          "id.token.claim" : "true",
          "user.attribute.region" : "region",
          "access.token.claim" : "true",
          "user.attribute.locality" : "locality"
        }
      } ]
    }, {
      "id" : "784cb2ac-85d0-4427-8f96-56ac5dd1a4e7",
      "name" : "roles",
      "description" : "OpenID Connect scope for add user roles to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "consent.screen.text" : "${rolesScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "46fe3c46-ae96-4c9b-93df-ebfe5a191367",
        "name" : "audience resolve",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-audience-resolve-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      }, {
        "id" : "216a1752-abd5-4f0e-bcd9-7521aa2e7e11",
        "name" : "realm roles",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-realm-role-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute" : "foo",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "realm_access.roles",
          "jsonType.label" : "String",
          "multivalued" : "true"
        }
      }, {
        "id" : "cf5cfaee-b47d-48ac-9c8a-6c3b64cb0c73",
        "name" : "client roles",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-client-role-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute" : "foo",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "resource_access.${client_id}.roles",
          "jsonType.label" : "String",
          "multivalued" : "true"
        }
      } ]
    }, {
      "id" : "b65d6eec-eb56-4ce8-a166-d7053f5bb03d",
      "name" : "role_list",
      "description" : "SAML role list",
      "protocol" : "saml",
      "attributes" : {
        "consent.screen.text" : "${samlRoleListScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "d0cfffbf-0cd1-4ef4-a65b-a864e2dbe27e",
        "name" : "role list",
        "protocol" : "saml",
        "protocolMapper" : "saml-role-list-mapper",
        "consentRequired" : false,
        "config" : {
          "single" : "false",
          "attribute.nameformat" : "Basic",
          "attribute.name" : "Role"
        }
      } ]
    }, {
      "id" : "f6347849-2d5b-4fe6-b176-3d9e9f4b05b8",
      "name" : "saml_organization",
      "description" : "Organization Membership",
      "protocol" : "saml",
      "attributes" : {
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "0b3bec7b-3687-4f6a-bc63-3e7c4cfa391a",
        "name" : "organization",
        "protocol" : "saml",
        "protocolMapper" : "saml-organization-membership-mapper",
        "consentRequired" : false,
        "config" : { }
      } ]
    }, {
      "id" : "bd86f113-c3fb-4420-a628-1fdfd8a7797c",
      "name" : "profile",
      "description" : "OpenID Connect built-in scope: profile",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${profileScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "24bbe7b3-135f-4607-ab8b-30a753040063",
        "name" : "website",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "website",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "website",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "59a8dad2-62c0-4f0f-bc90-24ea7706c688",
        "name" : "zoneinfo",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "zoneinfo",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "zoneinfo",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "a324bb42-8b47-4d94-8022-13720c6b912e",
        "name" : "locale",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "locale",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "locale",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "597cf1c7-3ecb-42a1-a98e-8e540088e452",
        "name" : "updated at",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "updatedAt",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "updated_at",
          "jsonType.label" : "long"
        }
      }, {
        "id" : "a227df56-b6ea-4c4e-b874-af9b571463b1",
        "name" : "picture",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "picture",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "picture",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "85de5c46-3464-4fe5-b080-eee585bde9c0",
        "name" : "full name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-full-name-mapper",
        "consentRequired" : false,
        "config" : {
          "id.token.claim" : "true",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "userinfo.token.claim" : "true"
        }
      }, {
        "id" : "610c377b-b959-4b90-9145-110bb5b01730",
        "name" : "family name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "lastName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "family_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "948aeb6c-2d90-4e3b-9274-5c632563ecd5",
        "name" : "middle name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "middleName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "middle_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "f7d55d11-2549-4125-bbdf-209d9c06bad5",
        "name" : "nickname",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "nickname",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "nickname",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "ddfdf08b-c182-4c4e-900f-109f0b4865ae",
        "name" : "given name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "firstName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "given_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "39085e89-1247-4c83-a75d-383790e33b6d",
        "name" : "birthdate",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "birthdate",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "birthdate",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "ad48951d-15ca-4b67-b73f-4e3a1a65035f",
        "name" : "gender",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "gender",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "gender",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "40070a68-a38b-47de-add9-40b5b0a434a1",
        "name" : "username",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "username",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "preferred_username",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "9ab7c5af-601c-41ed-9f61-0992c1b73149",
        "name" : "profile",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "profile",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "profile",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "1b7da1e3-b972-4493-a7e9-6e99b6d3f32f",
      "name" : "service_account",
      "description" : "Specific scope for a client enabled for service accounts",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "91c594db-091a-457d-a79b-faa378d0b7cf",
        "name" : "Client Host",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "clientHost",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientHost",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "378f453a-6037-43aa-8e46-c58be2b192db",
        "name" : "Client IP Address",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "clientAddress",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientAddress",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "fce57ffb-0df5-44c1-8bbf-852d3bb64bc5",
        "name" : "Client ID",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "client_id",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "client_id",
          "jsonType.label" : "String"
        }
      } ]
    } ],
    "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
    "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
    "browserSecurityHeaders" : {
      "contentSecurityPolicyReportOnly" : "",
      "xContentTypeOptions" : "nosniff",
      "referrerPolicy" : "no-referrer",
      "xRobotsTag" : "none",
      "xFrameOptions" : "SAMEORIGIN",
      "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
    },
    "smtpServer" : { },
    "eventsEnabled" : false,
    "eventsListeners" : [ "jboss-logging" ],
    "enabledEventTypes" : [ ],
    "adminEventsEnabled" : false,
    "adminEventsDetailsEnabled" : false,
    "identityProviders" : [ ],
    "identityProviderMappers" : [ ],
    "components" : {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
        "id" : "96fc3015-fdbb-45b0-8ec2-874f53851156",
        "name" : "Consent Required",
        "providerId" : "consent-required",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "0d4f14b3-5f44-4875-af53-da69c1254b86",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      }, {
        "id" : "9093d915-417f-4862-9127-3ea20234c435",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper" ]
        }
      }, {
        "id" : "abf7953a-6110-4ee8-a6cb-d8821d1d1b5d",
        "name" : "Full Scope Disabled",
        "providerId" : "scope",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "a03a2436-7f67-4948-8457-7f78aa34ad6c",
        "name" : "Max Clients Limit",
        "providerId" : "max-clients",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "max-clients" : [ "200" ]
        }
      }, {
        "id" : "916f9956-edf0-494d-a4c1-b6151543959b",
        "name" : "Trusted Hosts",
        "providerId" : "trusted-hosts",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "host-sending-registration-request-must-match" : [ "true" ],
          "client-uris-must-match" : [ "true" ]
        }
      }, {
        "id" : "ab2198ec-8bf7-488a-9c03-ef6e765ae0df",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper" ]
        }
      }, {
        "id" : "26869d71-149b-4d81-8573-3315d0f60fca",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      } ],
      "org.keycloak.keys.KeyProvider" : [ {
        "id" : "3845de38-944b-44f8-94f6-5f1bbd0d101c",
        "name" : "rsa-enc-generated",
        "providerId" : "rsa-enc-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEpAIBAAKCAQEA8wdIAwfBW1jWbVUpCXc9XFiWRD70Z6x0jFJW2PNp0eO7DtNreOTqPy2SeUuXuwAZWyuEOOHb+Lq4EOy7Jm0+RZjh0pc81yxy0HckMk4Mlh+dzVk04SrAwPWqnti3nGag2clH7VKtbGklRc5jinl+yRgdII4oRSuZTLqNtG/YOd7Fkm8XHM3iMpqaM0TdEDqxrnm2U+Dyv6Cc/8iVsYkdTPwhIzXo6zZxfXSJDNgvtzWcnXV/aoMJA8S+JftTbyy6T1J11zkxc5tvD+HDG/VpslPHj1N9Euoxr7b1UrpRut3acMcf5AUOKG7dux4vwCfrGwCwm3LWrmTt9BpqCdU9YwIDAQABAoIBAB1SthYjg+mFLQ4xFcv+FqnDSJJAdFXkAYYC01bG+/AmxaWyzcde+4KW+ZLoE40tJGITPJdubQ+0W8wy/BvVV4unOCwkMmOWCd5sWbI2J5+fffdOeapnca12ltkmtfTJj0Pn3OVeMe2gPC6RigIlya3y2mTYsjQyYANZiQqJ6jGFGukrD4aob1MDbYgNRzIf0J/Evql+1tzGSYgaH7OVw6VxX/0eJ681j1k412xJzYqDgg7DnYz8jO7UkaZFKwfxHsgScLG5D30JFfpxH9kqztTxR+HvSMIVjvK4p3M7oG9aK3a2QUrd5blBAa7OZ7DDdRf9oLCbGWc6PpkIwWpgTL0CgYEA+xt9OK4vrsv04nxlcBeV3veot2lUImEzPa8GLBVyJkK+wv7LsTBgNteI0SFKs0xig4C8IxhuvrwKYflR+ash1USwEwjMNEfkbR6FnlpRbthtlJX+l/MyuujPK6R7pSW6o7FxDwceMZ8BPdhFoAQlync7OztOXoNuVdSZFGqMP/8CgYEA98N+rLr9gun7WKXVdmlazq5KPWg2Abxr1z/vmObgIa+8kZXVboL3jn0O55ZNwz3358f2ZGkw9dHFpKZMO3neOiGYwx1cvxLde+mFo1jGaPbe3zsUF3AXhH6gXU+tSrMQcVUkLUia5GYd1w7bIqTGYqLwSKzcOc3mAg8cw+auAp0CgYEAj54SSZe+Z9/5CIyTS8ABlMva8EPKvfsP3oi7I/2EEwP7rPUjtQzxCozNkKbU3aWjdojrkbsIpAhSe+SoEP7i0+J8Pfa7LG+t4wcg7wfDKX2ZdvEu8uNCsYoz60cg/LyOec8j1a+BgmnpwOBwOewFXT5CX0c1NHNBaM+2WenymysCgYEAnhMfferrlZvdHgjn8V10b0sp2JXlZyQlFbcYEdCzjSqHP8d93b03XrSRTtZJlNizkzC0Fgo7D4sf81Waa5PsYeBPi6TvKIVLxCQQfFBGfm+LcJdL0UxV5NW5UO9l27P1OKmepDmfgTtZrH0w+KByZjoY3fVTqJmiNwwXSTGjMc0CgYBk+jn1kVCFCcflmcYHSw8MC3KsjfFBVKuICLa6uQCGQp6DxK3ccSvYjGByHwHKGBrdH1SIgAdp3P6yzW9JazoF+AK/fng4BeH+ugs2/A0LLFeha5BoBvASZnp0V5Mttkb3p70DGiE4kFTElly5yRI9x8gbRAc1xYgaK0YJuj3HGQ==" ],
          "keyUse" : [ "ENC" ],
          "certificate" : [ "MIICmTCCAYECBgGX2M9wrzANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVrYWZrYTAeFw0yNTA3MDUwNDE3NDJaFw0zNTA3MDUwNDE5MjJaMBAxDjAMBgNVBAMMBWthZmthMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8wdIAwfBW1jWbVUpCXc9XFiWRD70Z6x0jFJW2PNp0eO7DtNreOTqPy2SeUuXuwAZWyuEOOHb+Lq4EOy7Jm0+RZjh0pc81yxy0HckMk4Mlh+dzVk04SrAwPWqnti3nGag2clH7VKtbGklRc5jinl+yRgdII4oRSuZTLqNtG/YOd7Fkm8XHM3iMpqaM0TdEDqxrnm2U+Dyv6Cc/8iVsYkdTPwhIzXo6zZxfXSJDNgvtzWcnXV/aoMJA8S+JftTbyy6T1J11zkxc5tvD+HDG/VpslPHj1N9Euoxr7b1UrpRut3acMcf5AUOKG7dux4vwCfrGwCwm3LWrmTt9BpqCdU9YwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCyuViPE2QK4J++zyAPy0kuki9G1Q18zT1FIDZNW3s4B8gshOusu3isATJ+Bu/uV7xq8TlgQg6q/o8E7ZcdoiTyPMW4CcZRimX5kmbJ82G+oodeu4n2zCEJG0EfxZgFlO3MWKIIP4yBNf8ZGwATAKytNDJt4tconYJSlut2SJI0MdRx01Nywz7TfZ/tjKYr4xJgSHeUIT3JhYST+Glv71xEJmiiLNrkX5SP0zuDakRiAjjJ7HU9CZHi5z3ZPPCt1Hbf+yNAfmUefnK68j+tGykpLDyXALbhkaA+xUFjc+Ngnzq/JbuaCQflvj76J4fclyIXlIkFaxYoiZ+viifpQkSu" ],
          "priority" : [ "100" ],
          "algorithm" : [ "RSA-OAEP" ]
        }
      }, {
        "id" : "d398a3f5-fa0f-4397-9756-7ccbec0b7281",
        "name" : "aes-generated",
        "providerId" : "aes-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "ee34c1fb-ca44-4ddb-a774-97079f3afbb4" ],
          "secret" : [ "P1Fz_SXNqJqHKaGwq2xJgQ" ],
          "priority" : [ "100" ]
        }
      }, {
        "id" : "7ba258cd-c7d8-4ff9-a960-97f791631ad7",
        "name" : "hmac-generated-hs512",
        "providerId" : "hmac-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "19623907-deee-4219-b6f1-a360afd73bee" ],
          "secret" : [ "846-hKr48oxpKKC34lo9x4_XZ7qUrCHlvDOUYUAc57sjqT8cScBYdVdGNEKlTFkIQXCpcby5jLS1A5KjLZyeFrwGCB5yEqqUyXQf7hyDwVnU9hv6OB9Vbn4VZb9f4rW7AwxYBInrQ_ZM_BVdMRDiFEt4aYO1mz_BMyK9VvGiznU" ],
          "priority" : [ "100" ],
          "algorithm" : [ "HS512" ]
        }
      }, {
        "id" : "ee787f39-5ff3-4061-8c4f-811432c9e0b9",
        "name" : "rsa-generated",
        "providerId" : "rsa-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEpAIBAAKCAQEAzCi1EizQ1JhFbv4Yx3c0fkn5SWDJc7rIma5K7YMM9LNxAXmUXmum7OXXQNsUIPvsxPoE1c2xH/TggAKjc/sIL5/6E5VZCVqJfZF1NelSwCYztBShUREVSghynEDjoCfh1sDT5Xi+Wi693JIAu/G1XeO/UlfBh+DEEve0iyQioE6ugQMcvBq/aHTtK50vcaxD69JtSiU1PFNgj+aa0wtu7Gs7XSOFDoiZXiaCqUFc4c/5HU7UkMWWw0mE6ehhaNjFPtk3g4sss6ie7nz7xYdOnxniMz0/4fbwDgoxQdUWwgnYCFOI9p7ez9BfGSdahGVudjIIqXDkuLwBETCkLDXYDQIDAQABAoIBAA0PYpadJCZ2xORRisNselYaLywKQ2uCQfW7ewLAIiqfiwWxjHP7gNQWl5idcHzJWOS4lhQY99vSkK+nsONJEQWTlI4UUlE2nTqEPQJb9hr20VJpCnEdkxDSGFuAttRb5hwp6DQ9rzb6K/5JnxSRemJyoLPTYNJA0ZI2uIeOd3eX4QEVTTcTBS5bM9hZuw646TN7oMNoxub9eY04hgAbsADt5yJxsTAg/dbLeAxbz7OY+I9jbAxIwf9HtkV0DHoIy7kOq/wArRZZ9gqBzXTEo6aoQSfvFQ0/LyWR3S+tAy7N8hy36I0SHQ48IvCDwVokBBATgp/BQ93i9D+IDMgHXokCgYEA7o15zk9Nt2ktU2hgWCxsc2+aM1q1sEAParCD84ETSaeiI0YbHDb/yNzp2v488PFE4rdU1wLsamIgAJe9SkuhUnoi7Uf9pCdWMZb+P5UtcVs21wKJKxq1p1J15D2LQ0kwEqtOwYEkZAc3j8mzLqWGnDY9Ma4P7GxIj1Yj+F/jndkCgYEA2xdDx0u/HmoqsMEsExwTGyAh4fjodd8R3HAw2T20lUftAAfMUihtJmRtViek/gmb8kiGawRBa63HJZznmucOyQX0KL1CrN+mL6kIjPZ5HOuOLZUbPLf5lnsBQa6e4n/j9U7PZ3RWtvMgH8bPJcaYi873OWitcDdlMXP0Uthth1UCgYBFnya4jq6Y4+plmGXd9gEk46J2cHfsW5XkRmYMUFSHv5PzhYduAaM/RTI/RsoUa+X14Rmysti65659XcvR/ia0Ao9k/wjIuu5OBMppVilwFvX3ZHcSDHaNweREW63kUlzkZfjTQtSTGQQfQ/e2mnqh5raPZESjdKrsonBXEe1FaQKBgQCq7L6TKFQlbVx642n4SqnZOrtUaXUqKGrt2JUzlsFgyWlr4amU2zc0gZsPYQSGsIZ6gfxkV0CWuk+o132VSvgs+rkeY3E2H5Gukyg5mTypxFf61d4XA8zzimlTjeElAfOdeOu0YX4ZYxpH0Dnh1ctDH6eeoTzWVFFdQIJ3c6QXtQKBgQC4kX7E6yoJ7GDiYFX+W07NC/fdlLwrBFyf2oXrN1glL1II+a883QjZ8NyHHB5gXkzJda9k9f5Xo8J58yCXQdJNmwfHSA1Eiil3K5xcp4YMCZoSANwqxVHpXBFljtADC03AtjZGwpRcUkdlXpJ3yp3fUoEXVjAC0AkpH7K67QY7kQ==" ],
          "keyUse" : [ "SIG" ],
          "certificate" : [ "MIICmTCCAYECBgGX2M9wUzANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVrYWZrYTAeFw0yNTA3MDUwNDE3NDJaFw0zNTA3MDUwNDE5MjJaMBAxDjAMBgNVBAMMBWthZmthMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzCi1EizQ1JhFbv4Yx3c0fkn5SWDJc7rIma5K7YMM9LNxAXmUXmum7OXXQNsUIPvsxPoE1c2xH/TggAKjc/sIL5/6E5VZCVqJfZF1NelSwCYztBShUREVSghynEDjoCfh1sDT5Xi+Wi693JIAu/G1XeO/UlfBh+DEEve0iyQioE6ugQMcvBq/aHTtK50vcaxD69JtSiU1PFNgj+aa0wtu7Gs7XSOFDoiZXiaCqUFc4c/5HU7UkMWWw0mE6ehhaNjFPtk3g4sss6ie7nz7xYdOnxniMz0/4fbwDgoxQdUWwgnYCFOI9p7ez9BfGSdahGVudjIIqXDkuLwBETCkLDXYDQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCwXPMcBbpyGCZJleqR0fe8oCzsw5zTNCduYO81uldxSDHGK+FK2AAgDfJhHB8BhY7935dxRv9uSU2VE5uByo9msScYMJvP7dHcjme+d2kFffr4C1LtGDS+Mzos2ilDnYGSN36djQxYXotfKOOw9EEtq60tEsXsyyKsJ0asC5ViEGOlCuT/kcmS/lXNcZvIgo1g4JSPpi1SQs01hrIPq1JyfjXElozj5a0MUonlpD4WkwT2bwlRDj023ovfibah9+35hdzrpwRyBjX6NK9PwtYc/R4e6k8pTRQNtD4uHGpw4DATl4fEwMGEFIB30cejVI3QyGmmkMeNTwsZxvLXwAx+" ],
          "priority" : [ "100" ]
        }
      } ]
    },
    "internationalizationEnabled" : false,
    "supportedLocales" : [ ],
    "authenticationFlows" : [ {
      "id" : "74e853db-7429-42be-bb1c-c620ac9d6efa",
      "alias" : "Account verification options",
      "description" : "Method with which to verity the existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-email-verification",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Verify Existing Account by Re-authentication",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "ec76add2-9e62-4589-87e2-d6a7f00d3658",
      "alias" : "Browser - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "ac316a1f-c994-4b32-a547-2134933bcc7a",
      "alias" : "Browser - Conditional Organization",
      "description" : "Flow to determine if the organization identity-first login is to be used",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "organization",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "9a263ea2-7ad8-44bb-bfac-e3a422b155cd",
      "alias" : "Direct Grant - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "8870514c-67ed-4449-8784-7827366dbddc",
      "alias" : "First Broker Login - Conditional Organization",
      "description" : "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "idp-add-organization-member",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "8a97ad14-bf78-4c94-bf08-1128eef0e165",
      "alias" : "First broker login - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "b803b3e8-4a33-4200-812b-e565ffbf363f",
      "alias" : "Handle Existing Account",
      "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-confirm-link",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Account verification options",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "96b66979-d984-47b9-9ec0-b157981784fc",
      "alias" : "Organization",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 10,
        "autheticatorFlow" : true,
        "flowAlias" : "Browser - Conditional Organization",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "09ebf535-d674-4e61-bb0d-af1c1a069401",
      "alias" : "Reset - Conditional OTP",
      "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "0a666709-31ed-4ef0-a532-d93794f353c5",
      "alias" : "User creation or linking",
      "description" : "Flow for the existing/non-existing user alternatives",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "create unique user config",
        "authenticator" : "idp-create-user-if-unique",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Handle Existing Account",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "ae6bae62-90c7-49a4-918c-8c19fd6eed0f",
      "alias" : "Verify Existing Account by Re-authentication",
      "description" : "Reauthentication of existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "First broker login - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "f381e749-de42-4cfc-8c49-a72a8a356934",
      "alias" : "browser",
      "description" : "Browser based authentication",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-cookie",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-spnego",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "identity-provider-redirector",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 25,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 26,
        "autheticatorFlow" : true,
        "flowAlias" : "Organization",
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "forms",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "b5c9ef67-9a71-446e-a8e0-1f2a339752f1",
      "alias" : "clients",
      "description" : "Base authentication for clients",
      "providerId" : "client-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "client-secret",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-secret-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-x509",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 40,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "4f01f76d-ba2f-460a-b2d9-de0b896a4c09",
      "alias" : "direct grant",
      "description" : "OpenID Connect Resource Owner Grant",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "direct-grant-validate-username",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "Direct Grant - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "f7453a23-ca26-41ce-9da1-23f5ca806718",
      "alias" : "docker auth",
      "description" : "Used by Docker clients to authenticate against the IDP",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "docker-http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "fc4af62b-93e4-40c9-ac23-2764642c4c01",
      "alias" : "first broker login",
      "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "review profile config",
        "authenticator" : "idp-review-profile",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "User creation or linking",
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 50,
        "autheticatorFlow" : true,
        "flowAlias" : "First Broker Login - Conditional Organization",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "b997d330-ecf7-4fbc-bd25-d0df7e3f9020",
      "alias" : "forms",
      "description" : "Username, password, otp and other auth forms.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Browser - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "d5d0095c-502e-4060-bedd-866da6b580c0",
      "alias" : "registration",
      "description" : "Registration flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-page-form",
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : true,
        "flowAlias" : "registration form",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "d68411a0-0532-4487-8336-3dfa8b1c977c",
      "alias" : "registration form",
      "description" : "Registration form",
      "providerId" : "form-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-user-creation",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-password-action",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 50,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-recaptcha-action",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 60,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-terms-and-conditions",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 70,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "7ebbb89f-fa9d-424d-b089-4903568601a3",
      "alias" : "reset credentials",
      "description" : "Reset credentials for a user if they forgot their password or something",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "reset-credentials-choose-user",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-credential-email",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 40,
        "autheticatorFlow" : true,
        "flowAlias" : "Reset - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "b589c125-7580-4538-aa05-67d1a16c1bc0",
      "alias" : "saml ecp",
      "description" : "SAML ECP Profile Authentication Flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    } ],
    "authenticatorConfig" : [ {
      "id" : "fead19e0-89c4-4a4c-93fc-19448c35e504",
      "alias" : "create unique user config",
      "config" : {
        "require.password.update.after.registration" : "false"
      }
    }, {
      "id" : "04d5ba59-76d8-4c7f-b494-e27523661e93",
      "alias" : "review profile config",
      "config" : {
        "update.profile.on.first.login" : "missing"
      }
    } ],
    "requiredActions" : [ {
      "alias" : "CONFIGURE_TOTP",
      "name" : "Configure OTP",
      "providerId" : "CONFIGURE_TOTP",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 10,
      "config" : { }
    }, {
      "alias" : "TERMS_AND_CONDITIONS",
      "name" : "Terms and Conditions",
      "providerId" : "TERMS_AND_CONDITIONS",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 20,
      "config" : { }
    }, {
      "alias" : "UPDATE_PASSWORD",
      "name" : "Update Password",
      "providerId" : "UPDATE_PASSWORD",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 30,
      "config" : { }
    }, {
      "alias" : "UPDATE_PROFILE",
      "name" : "Update Profile",
      "providerId" : "UPDATE_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 40,
      "config" : { }
    }, {
      "alias" : "VERIFY_EMAIL",
      "name" : "Verify Email",
      "providerId" : "VERIFY_EMAIL",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 50,
      "config" : { }
    }, {
      "alias" : "delete_account",
      "name" : "Delete Account",
      "providerId" : "delete_account",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 60,
      "config" : { }
    }, {
      "alias" : "webauthn-register",
      "name" : "Webauthn Register",
      "providerId" : "webauthn-register",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 70,
      "config" : { }
    }, {
      "alias" : "webauthn-register-passwordless",
      "name" : "Webauthn Register Passwordless",
      "providerId" : "webauthn-register-passwordless",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 80,
      "config" : { }
    }, {
      "alias" : "VERIFY_PROFILE",
      "name" : "Verify Profile",
      "providerId" : "VERIFY_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 90,
      "config" : { }
    }, {
      "alias" : "delete_credential",
      "name" : "Delete Credential",
      "providerId" : "delete_credential",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 100,
      "config" : { }
    }, {
      "alias" : "update_user_locale",
      "name" : "Update User Locale",
      "providerId" : "update_user_locale",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 1000,
      "config" : { }
    } ],
    "browserFlow" : "browser",
    "registrationFlow" : "registration",
    "directGrantFlow" : "direct grant",
    "resetCredentialsFlow" : "reset credentials",
    "clientAuthenticationFlow" : "clients",
    "dockerAuthenticationFlow" : "docker auth",
    "firstBrokerLoginFlow" : "first broker login",
    "attributes" : {
      "cibaBackchannelTokenDeliveryMode" : "poll",
      "cibaExpiresIn" : "120",
      "cibaAuthRequestedUserHint" : "login_hint",
      "oauth2DeviceCodeLifespan" : "600",
      "clientOfflineSessionMaxLifespan" : "0",
      "oauth2DevicePollingInterval" : "5",
      "clientSessionIdleTimeout" : "0",
      "parRequestUriLifespan" : "60",
      "clientSessionMaxLifespan" : "0",
      "clientOfflineSessionIdleTimeout" : "0",
      "cibaInterval" : "5",
      "realmReusableOtpCode" : "false"
    },
    "keycloakVersion" : "26.2.5",
    "userManagedAccessAllowed" : false,
    "organizationsEnabled" : false,
    "verifiableCredentialsEnabled" : false,
    "adminPermissionsEnabled" : false,
    "clientProfiles" : {
      "profiles" : [ ]
    },
    "clientPolicies" : {
      "policies" : [ ]
    }
  },

  {
    "id" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
    "realm" : "concertify",
    "notBefore" : 0,
    "defaultSignatureAlgorithm" : "RS256",
    "revokeRefreshToken" : false,
    "refreshTokenMaxReuse" : 0,
    "accessTokenLifespan" : 300,
    "accessTokenLifespanForImplicitFlow" : 900,
    "ssoSessionIdleTimeout" : 1800,
    "ssoSessionMaxLifespan" : 36000,
    "ssoSessionIdleTimeoutRememberMe" : 0,
    "ssoSessionMaxLifespanRememberMe" : 0,
    "offlineSessionIdleTimeout" : 2592000,
    "offlineSessionMaxLifespanEnabled" : false,
    "offlineSessionMaxLifespan" : 5184000,
    "clientSessionIdleTimeout" : 0,
    "clientSessionMaxLifespan" : 0,
    "clientOfflineSessionIdleTimeout" : 0,
    "clientOfflineSessionMaxLifespan" : 0,
    "accessCodeLifespan" : 60,
    "accessCodeLifespanUserAction" : 300,
    "accessCodeLifespanLogin" : 1800,
    "actionTokenGeneratedByAdminLifespan" : 43200,
    "actionTokenGeneratedByUserLifespan" : 300,
    "oauth2DeviceCodeLifespan" : 600,
    "oauth2DevicePollingInterval" : 5,
    "enabled" : true,
    "sslRequired" : "external",
    "registrationAllowed" : true,
    "registrationEmailAsUsername" : true,
    "rememberMe" : true,
    "verifyEmail" : false,
    "loginWithEmailAllowed" : true,
    "duplicateEmailsAllowed" : false,
    "resetPasswordAllowed" : true,
    "editUsernameAllowed" : true,
    "bruteForceProtected" : false,
    "permanentLockout" : false,
    "maxTemporaryLockouts" : 0,
    "bruteForceStrategy" : "MULTIPLE",
    "maxFailureWaitSeconds" : 900,
    "minimumQuickLoginWaitSeconds" : 60,
    "waitIncrementSeconds" : 60,
    "quickLoginCheckMilliSeconds" : 1000,
    "maxDeltaTimeSeconds" : 43200,
    "failureFactor" : 30,
    "roles" : {
      "realm" : [ {
        "id" : "9d255bca-2e46-44af-9a22-412044b6a4e0",
        "name" : "offline_access",
        "description" : "${role_offline-access}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "1e79ae1c-4a16-4b71-b79e-7da0a5cc53b5",
        "name" : "organizer_us",
        "composite" : true,
        "composites" : {
          "client" : {
            "concert-service" : [ "concert:delete", "concert:read", "concert:create", "concert:view", "concert:update" ],
            "auth-service" : [ "auth:user:read", "auth:user:update" ],
            "booking-service" : [ "booking:update", "booking:view", "booking:read" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "d004a16f-465e-47d8-8a98-6a832cf0195b",
        "name" : "organizer_vn",
        "composite" : true,
        "composites" : {
          "client" : {
            "concert-service" : [ "concert:delete", "concert:read", "concert:create", "concert:view", "concert:update" ],
            "auth-service" : [ "auth:user:read", "auth:user:update" ],
            "booking-service" : [ "booking:update", "booking:view", "booking:read" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "a39c4b34-4adf-4e16-b2f3-eb83ac48d7ea",
        "name" : "uma_authorization",
        "description" : "${role_uma_authorization}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "0f6c1daf-9ee0-45d5-b631-2cae69bfe1ac",
        "name" : "default-roles-concertify",
        "description" : "${role_default-roles}",
        "composite" : true,
        "composites" : {
          "realm" : [ "offline_access", "uma_authorization" ],
          "client" : {
            "account" : [ "manage-account", "view-profile" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "656e4dbc-7148-44e3-99ef-08c111f54d8d",
        "name" : "booking-service",
        "description" : "",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "880d4593-4fde-47ed-85c0-43b2c2824c29",
        "name" : "auth-service",
        "description" : "",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "84bec6c7-b1f0-4531-8ebf-989f7bf5563c",
        "name" : "customer_us",
        "composite" : true,
        "composites" : {
          "client" : {
            "concert-service" : [ "concert:seat:update", "concert:view" ],
            "auth-service" : [ "auth:user:read", "auth:user:update" ],
            "booking-service" : [ "booking:update", "booking:view", "booking:create", "booking:read", "booking:delete" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "59304d8e-1353-4990-b06f-209e24035d1f",
        "name" : "customer_vn",
        "composite" : true,
        "composites" : {
          "client" : {
            "concert-service" : [ "concert:seat:update", "concert:view" ],
            "auth-service" : [ "auth:user:read", "auth:user:update" ],
            "booking-service" : [ "booking:update", "booking:view", "booking:create", "booking:read", "booking:delete" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "a286f8fb-0579-4f68-96d6-aefdce9acbc4",
        "name" : "concert-service",
        "description" : "",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      }, {
        "id" : "9e5cc3b5-ddbb-4001-a1e8-137eaa65b0b2",
        "name" : "global_admin",
        "description" : "role_full_access",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "realm-admin" ]
          }
        },
        "clientRole" : false,
        "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a",
        "attributes" : { }
      } ],
      "client" : {
        "concert-service" : [ {
          "id" : "2aac0f74-9b9a-4f64-9588-4a16213a2eef",
          "name" : "concert:delete",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "622dd96b-b6f8-44ff-849d-1c434ae42910",
          "name" : "concert:read",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "120a2ecb-9728-4a16-9aae-41d448cac789",
          "name" : "concert:create",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "27be83e9-7edc-4624-a82a-2639c4b404ed",
          "name" : "concert:seat:update",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "e35aa71b-33f0-42f6-a48d-607f370fc472",
          "name" : "concert:view",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "c6bc6fc5-4545-41d9-8a0a-ad9f3e9fe673",
          "name" : "concert:update",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "bfe2083a-47cb-4a81-be0a-43373e1018c6",
          "name" : "concert:approve",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        }, {
          "id" : "a964fa40-97b3-4349-bd0e-35fa50b27426",
          "name" : "uma_protection",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
          "attributes" : { }
        } ],
        "web-app" : [ {
          "id" : "57412f6e-884c-4a89-af39-d8dfdb892d14",
          "name" : "uma_protection",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "2d0e232b-0cf9-4f6d-a6e2-33b3aa050104",
          "attributes" : { }
        } ],
        "auth-service" : [ {
          "id" : "1a103703-226e-44d1-845a-d91666d156e1",
          "name" : "auth:update",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "d2846385-38a9-4c11-b97c-633231743b3f",
          "name" : "auth:delete",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "dffc8869-3807-410f-a709-a9544d08420f",
          "name" : "auth:user:read",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "0ca8001d-b521-4c19-b836-abea5b869c77",
          "name" : "auth:view",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "3fefe215-77d0-4ca7-ae6f-8baad39d463c",
          "name" : "auth:create",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "77e6163e-ebfa-4490-831e-ae4e50fc1b10",
          "name" : "uma_protection",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "3d938b7b-a469-4450-8cb3-5e8eeec78793",
          "name" : "auth:read",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        }, {
          "id" : "d1db18f9-4be3-4b7a-b4c0-175755fa5931",
          "name" : "auth:user:update",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
          "attributes" : { }
        } ],
        "realm-management" : [ {
          "id" : "f94667d6-c5f7-439d-9494-8eb2a7140524",
          "name" : "view-realm",
          "description" : "${role_view-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "551356ac-5f16-4d46-8404-63ed1b7cc5eb",
          "name" : "query-clients",
          "description" : "${role_query-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "9821190f-0f2b-4d93-bea4-1a6d84bbf2d2",
          "name" : "view-clients",
          "description" : "${role_view-clients}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "query-clients" ]
            }
          },
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "77cbdfb9-2f28-419e-b6b2-0ce25d5241a2",
          "name" : "manage-users",
          "description" : "${role_manage-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "e241e045-ffd8-48d7-9cb5-bec709979a1c",
          "name" : "query-users",
          "description" : "${role_query-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "948babf4-7472-4081-b0c2-e392a946fab6",
          "name" : "manage-clients",
          "description" : "${role_manage-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "9d74df38-f9b4-4a49-8278-4b1c87ce4a2b",
          "name" : "manage-events",
          "description" : "${role_manage-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "7680cc56-5cf2-4469-b185-e8cfa28b6b4f",
          "name" : "realm-admin",
          "description" : "${role_realm-admin}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "view-realm", "query-clients", "view-clients", "manage-users", "query-users", "manage-clients", "manage-events", "query-groups", "manage-authorization", "manage-identity-providers", "impersonation", "create-client", "manage-realm", "view-authorization", "query-realms", "view-events", "view-users", "view-identity-providers" ]
            }
          },
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "7433efe9-7c6f-4676-b7e0-4e0e33c6a0dc",
          "name" : "query-groups",
          "description" : "${role_query-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "b0441f54-ecf0-4e8d-85ed-ea728aa87889",
          "name" : "manage-authorization",
          "description" : "${role_manage-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "a076135a-398a-4d3d-86f7-d3a2d4865654",
          "name" : "manage-identity-providers",
          "description" : "${role_manage-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "d14c0c20-728c-4344-a2b3-c457c7841e91",
          "name" : "impersonation",
          "description" : "${role_impersonation}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "d2f16476-2a4c-4401-bf2f-fc5f26d25c4c",
          "name" : "create-client",
          "description" : "${role_create-client}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "f055962f-3e58-4902-8365-fc30b2251ef0",
          "name" : "manage-realm",
          "description" : "${role_manage-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "1351a75f-13da-4411-bec6-c9559576b5dd",
          "name" : "view-authorization",
          "description" : "${role_view-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "9755257f-5f9a-47cc-af5e-9beeea442a60",
          "name" : "query-realms",
          "description" : "${role_query-realms}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "42617615-b249-41ef-b80e-81dbf13f0a90",
          "name" : "view-events",
          "description" : "${role_view-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "7a9c768a-dd9f-4768-920b-10afb9765704",
          "name" : "view-users",
          "description" : "${role_view-users}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [ "query-users", "query-groups" ]
            }
          },
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        }, {
          "id" : "b1adf443-ac57-4543-b7ad-8dd048ad9929",
          "name" : "view-identity-providers",
          "description" : "${role_view-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
          "attributes" : { }
        } ],
        "security-admin-console" : [ ],
        "booking-service" : [ {
          "id" : "9b637233-866d-4438-a384-47224ea22a72",
          "name" : "uma_protection",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        }, {
          "id" : "5f77bc9e-18bc-48e6-a704-c381b9f74b4b",
          "name" : "booking:update",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        }, {
          "id" : "2887448e-be83-4615-a13b-7236a24d9aaa",
          "name" : "booking:view",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        }, {
          "id" : "3ee440b0-9bbb-44fd-ad13-b0ffc3ff34fd",
          "name" : "booking:create",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        }, {
          "id" : "e142a16b-b132-467f-b1a6-d967c0f83ae6",
          "name" : "booking:read",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        }, {
          "id" : "6093474b-fdb5-4c15-ab70-8cc3e46a0524",
          "name" : "booking:delete",
          "description" : "",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
          "attributes" : { }
        } ],
        "admin-cli" : [ ],
        "account-console" : [ ],
        "broker" : [ {
          "id" : "1ab2f2c9-7c0b-4ff4-a799-9cac21bf68a4",
          "name" : "read-token",
          "description" : "${role_read-token}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "c45c59f7-e41d-478b-aa7e-36385044951b",
          "attributes" : { }
        } ],
        "account" : [ {
          "id" : "b2564e1d-df14-476b-8736-348c77340cdd",
          "name" : "view-groups",
          "description" : "${role_view-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "d3f7467f-1673-42a9-8ebb-72aa3f2dd1b4",
          "name" : "manage-account-links",
          "description" : "${role_manage-account-links}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "3bad21e6-c6b9-4a7f-bda0-82e622ba5b9b",
          "name" : "view-applications",
          "description" : "${role_view-applications}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "7aa193bc-7223-4ba2-9b2b-8fffc1b3fe64",
          "name" : "delete-account",
          "description" : "${role_delete-account}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "03d4ad62-1594-4d5d-a005-b58129c9ebb4",
          "name" : "manage-account",
          "description" : "${role_manage-account}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [ "manage-account-links" ]
            }
          },
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "f0418db2-32b1-4513-bbb2-520a07fe1af6",
          "name" : "view-consent",
          "description" : "${role_view-consent}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "4710e2d8-5510-4b59-bdb4-1e4e08264901",
          "name" : "manage-consent",
          "description" : "${role_manage-consent}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [ "view-consent" ]
            }
          },
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        }, {
          "id" : "c4eadd27-5089-4cce-aeeb-1982bd6f8a5e",
          "name" : "view-profile",
          "description" : "${role_view-profile}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
          "attributes" : { }
        } ]
      }
    },
    "groups" : [ {
      "id" : "dba67237-9339-415d-8a1e-db686f9a4a5a",
      "name" : "global",
      "path" : "/global",
      "subGroups" : [ {
        "id" : "7459320b-00cf-4659-ad2c-3582ecf98d5e",
        "name" : "us",
        "path" : "/global/us",
        "parentId" : "dba67237-9339-415d-8a1e-db686f9a4a5a",
        "subGroups" : [ {
          "id" : "a9991dc9-87c0-42af-95af-bfd510fba958",
          "name" : "customers",
          "path" : "/global/us/customers",
          "parentId" : "7459320b-00cf-4659-ad2c-3582ecf98d5e",
          "subGroups" : [ ],
          "attributes" : { },
          "realmRoles" : [ "customer_us" ],
          "clientRoles" : { }
        }, {
          "id" : "fb24ce91-8cad-46c9-b765-929708e7654a",
          "name" : "organizers",
          "path" : "/global/us/organizers",
          "parentId" : "7459320b-00cf-4659-ad2c-3582ecf98d5e",
          "subGroups" : [ ],
          "attributes" : { },
          "realmRoles" : [ "organizer_us" ],
          "clientRoles" : { }
        } ],
        "attributes" : { },
        "realmRoles" : [ ],
        "clientRoles" : { }
      }, {
        "id" : "3f0a24c9-1889-45a6-bbe2-d54b4e775e49",
        "name" : "vn",
        "path" : "/global/vn",
        "parentId" : "dba67237-9339-415d-8a1e-db686f9a4a5a",
        "subGroups" : [ {
          "id" : "e872f09e-a69f-42b0-a74a-b51f142bb387",
          "name" : "customers",
          "path" : "/global/vn/customers",
          "parentId" : "3f0a24c9-1889-45a6-bbe2-d54b4e775e49",
          "subGroups" : [ ],
          "attributes" : { },
          "realmRoles" : [ "customer_vn" ],
          "clientRoles" : { }
        }, {
          "id" : "e139eb94-5540-452a-9a38-37ef6ff1c5e6",
          "name" : "organizers",
          "path" : "/global/vn/organizers",
          "parentId" : "3f0a24c9-1889-45a6-bbe2-d54b4e775e49",
          "subGroups" : [ ],
          "attributes" : { },
          "realmRoles" : [ "organizer_vn" ],
          "clientRoles" : { }
        } ],
        "attributes" : { },
        "realmRoles" : [ ],
        "clientRoles" : { }
      } ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    } ],
    "defaultRole" : {
      "id" : "0f6c1daf-9ee0-45d5-b631-2cae69bfe1ac",
      "name" : "default-roles-concertify",
      "description" : "${role_default-roles}",
      "composite" : true,
      "clientRole" : false,
      "containerId" : "debd37b6-36b2-404b-90ea-c7bc6dee6f0a"
    },
    "requiredCredentials" : [ "password" ],
    "otpPolicyType" : "totp",
    "otpPolicyAlgorithm" : "HmacSHA1",
    "otpPolicyInitialCounter" : 0,
    "otpPolicyDigits" : 6,
    "otpPolicyLookAheadWindow" : 1,
    "otpPolicyPeriod" : 30,
    "otpPolicyCodeReusable" : false,
    "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
    "localizationTexts" : { },
    "webAuthnPolicyRpEntityName" : "keycloak",
    "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
    "webAuthnPolicyRpId" : "",
    "webAuthnPolicyAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyRequireResidentKey" : "not specified",
    "webAuthnPolicyUserVerificationRequirement" : "not specified",
    "webAuthnPolicyCreateTimeout" : 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyAcceptableAaguids" : [ ],
    "webAuthnPolicyExtraOrigins" : [ ],
    "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
    "webAuthnPolicyPasswordlessRpId" : "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout" : 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
    "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
    "users" : [ {
      "id" : "9fbfd467-2b11-4af8-9a2d-ed4d900f80f7",
      "username" : "admin@gmail.com",
      "firstName" : "admin",
      "lastName" : "admin",
      "email" : "admin@gmail.com",
      "emailVerified" : true,
      "attributes" : {
        "region" : [ "vi" ]
      },
      "createdTimestamp" : 1752240641843,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "9f76cf61-2f11-4156-8d9c-2057b031fd07",
        "type" : "password",
        "userLabel" : "My password",
        "createdDate" : 1752240653546,
        "secretData" : "{\"value\":\"dIiGCGQTy5h+u6j/kjXvJIvJIeDfEe124oPOBe1/RWU=\",\"salt\":\"u5bqcILsQe9lkE/e9ll7vQ==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify", "global_admin" ],
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "0a860ce4-c02d-43ff-9c55-5efbb30a9782",
      "username" : "customer1.vn@gmail.com",
      "firstName" : "Customer1",
      "lastName" : "VN",
      "email" : "customer1.vn@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752998863806,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "75df5be6-9538-4351-b2f8-56faa6b67b3c",
        "type" : "password",
        "createdDate" : 1752998864045,
        "secretData" : "{\"value\":\"7JafGrrnCJEtsl4sGiP5quw3mSh6lnMrN+2rsar9QSg=\",\"salt\":\"b7CE6gHmY4I5cZwfMu7sZA==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/vn/customers" ]
    }, {
      "id" : "de588e7a-49df-4856-bb0d-8d0448014bdd",
      "username" : "customer.us@gmail.com",
      "firstName" : "Customer",
      "lastName" : "US",
      "email" : "customer.us@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752924385322,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "c41bc979-3f75-4e49-b160-3aca76f43c4d",
        "type" : "password",
        "createdDate" : 1752924385468,
        "secretData" : "{\"value\":\"DCFAjCvTEcEFJxzl3RxcpxVCE32tvmbVrVQAOkj585Q=\",\"salt\":\"pj2En06ZKZdScLjPbjmcLQ==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/us/customers" ]
    }, {
      "id" : "5ed0e5c4-ee30-4147-aef4-5877be2ce3f5",
      "username" : "customer.vn@gmail.com",
      "firstName" : "Customer",
      "lastName" : "VN",
      "email" : "customer.vn@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752998872484,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "a3af9853-4c49-439b-b56d-4fba758d7542",
        "type" : "password",
        "createdDate" : 1752998872634,
        "secretData" : "{\"value\":\"L0qMFMRTHd0TOD51rP4BkWS+1jYHuBYn4tCimNAzKIY=\",\"salt\":\"fnM9RQOyVhr7dskoUVPhOA==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/vn/customers" ]
    }, {
      "id" : "1f829a7d-2f33-4e70-93e9-6d16d5ef0aa3",
      "username" : "organizer1.vn@gmail.com",
      "firstName" : "Organizer1",
      "lastName" : "VN",
      "email" : "organizer1.vn@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752998898232,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "301d801a-941e-49b0-b995-676dc4619ab0",
        "type" : "password",
        "createdDate" : 1752998898383,
        "secretData" : "{\"value\":\"mFjtJeHOmVM4RmOlsSSqAWqZ/UH0YKfTzV7c4gnkIGI=\",\"salt\":\"F350XJTHZZi6lIL1uZXqDQ==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/vn/organizers" ]
    }, {
      "id" : "c685a677-df54-4439-9c31-25b8b875d89b",
      "username" : "organizer.us@gmail.com",
      "firstName" : "Organizer",
      "lastName" : "US",
      "email" : "organizer.us@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752924359571,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "626d6d7a-ddbf-4198-b552-fe4159b8b77b",
        "type" : "password",
        "createdDate" : 1752924359727,
        "secretData" : "{\"value\":\"05Yb7s5PgYp8QviIB26chnVR8+Xb3pZtDYSkeOuG1g0=\",\"salt\":\"C9c6H7mCgeKZJhmt/MOEjA==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/us/organizers" ]
    }, {
      "id" : "9453f62f-9671-4eee-b244-096e1d48c9c8",
      "username" : "organizer.vn@gmail.com",
      "firstName" : "Organizer",
      "lastName" : "VN",
      "email" : "organizer.vn@gmail.com",
      "emailVerified" : true,
      "createdTimestamp" : 1752998889573,
      "enabled" : true,
      "totp" : false,
      "credentials" : [ {
        "id" : "5391c17a-c4fd-4a17-be31-e91e7b4987ad",
        "type" : "password",
        "createdDate" : 1752998889726,
        "secretData" : "{\"value\":\"cJRKtt6T/HjRLZ7+sUvt5gAwMuio9nKF56p+l4iYaR8=\",\"salt\":\"nsHzHpjcLjYUjvSX8ZDGhQ==\",\"additionalParameters\":{}}",
        "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify" ],
      "notBefore" : 0,
      "groups" : [ "/global/vn/organizers" ]
    }, {
      "id" : "b6e28f8e-d082-4ecf-a72f-59b1d316fbec",
      "username" : "service-account-auth-service",
      "emailVerified" : false,
      "createdTimestamp" : 1752244010701,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "auth-service",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify", "auth-service" ],
      "clientRoles" : {
        "auth-service" : [ "uma_protection" ],
        "realm-management" : [ "realm-admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "c79246be-5311-44f0-ab46-c8bbc0b43a2f",
      "username" : "service-account-booking-service",
      "emailVerified" : false,
      "createdTimestamp" : 1752035030086,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "booking-service",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify", "booking-service" ],
      "clientRoles" : {
        "booking-service" : [ "uma_protection" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "de0f2166-a8f3-4bc3-b273-d2a19f5aa8bd",
      "username" : "service-account-concert-service",
      "emailVerified" : false,
      "createdTimestamp" : 1751956624354,
      "enabled" : true,
      "totp" : false,
      "serviceAccountClientId" : "concert-service",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "default-roles-concertify", "concert-service" ],
      "clientRoles" : {
        "concert-service" : [ "uma_protection" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    } ],
    "scopeMappings" : [ {
      "clientScope" : "offline_access",
      "roles" : [ "offline_access" ]
    } ],
    "clientScopeMappings" : {
      "account" : [ {
        "client" : "account-console",
        "roles" : [ "manage-account", "view-groups" ]
      } ]
    },
    "clients" : [ {
      "id" : "bb0003b5-b671-48c7-aeea-ecedd7f6d312",
      "clientId" : "account",
      "name" : "${client_account}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/concertify/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/realms/concertify/account/*" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "ab4e693a-3bf3-4335-8743-a730c42d411d",
      "clientId" : "account-console",
      "name" : "${client_account-console}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/concertify/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/realms/concertify/account/*" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "post.logout.redirect.uris" : "+",
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [ {
        "id" : "8e087cff-d2de-448d-bc61-2f169e1a50fa",
        "name" : "audience resolve",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-audience-resolve-mapper",
        "consentRequired" : false,
        "config" : { }
      } ],
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "f3563254-ddda-406a-94a9-600b7df956b2",
      "clientId" : "admin-cli",
      "name" : "${client_admin-cli}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "client.use.lightweight.access.token.enabled" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "84a5e49a-836e-43fe-9b0b-9aa1c15f0bf5",
      "clientId" : "auth-service",
      "name" : "client_auth-service",
      "description" : "Client for Auth Backend Service.",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "X4Y6nlgqf7dX6ajQ449gRRu9fF0gfBw2",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : true,
      "authorizationServicesEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1752244010",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "client_roles", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ],
      "authorizationSettings" : {
        "allowRemoteResourceManagement" : true,
        "policyEnforcementMode" : "ENFORCING",
        "resources" : [ {
          "name" : "Default Resource",
          "type" : "urn:auth-service:resources:default",
          "ownerManagedAccess" : false,
          "attributes" : { },
          "uris" : [ "/*" ]
        } ],
        "policies" : [ {
          "name" : "Default Policy",
          "description" : "A policy that grants access only for users within this realm",
          "type" : "regex",
          "logic" : "POSITIVE",
          "decisionStrategy" : "AFFIRMATIVE",
          "config" : {
            "targetContextAttributes" : "false",
            "pattern" : ".*",
            "targetClaim" : "sub"
          }
        }, {
          "name" : "Default Permission",
          "description" : "A permission that applies to the default resource type",
          "type" : "resource",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "defaultResourceType" : "urn:auth-service:resources:default",
            "applyPolicies" : "[\"Default Policy\"]"
          }
        } ],
        "scopes" : [ ],
        "decisionStrategy" : "UNANIMOUS"
      }
    }, {
      "id" : "abf1b1dd-a616-4576-92a3-384dc5dc0811",
      "clientId" : "booking-service",
      "name" : "client_booking-service",
      "description" : "Client for Booking Backend Service.",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "emGYC5XPSmeWUl2hfDbmlnqcCU500bac",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : true,
      "authorizationServicesEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.secret.creation.time" : "1752035030",
        "backchannel.logout.session.required" : "true",
        "standard.token.exchange.enabled" : "false",
        "post.logout.redirect.uris" : "+",
        "frontchannel.logout.session.required" : "true",
        "oauth2.device.authorization.grant.enabled" : "false",
        "display.on.consent.screen" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ],
      "authorizationSettings" : {
        "allowRemoteResourceManagement" : true,
        "policyEnforcementMode" : "ENFORCING",
        "resources" : [ {
          "name" : "Default Resource",
          "type" : "urn:booking-service:resources:default",
          "ownerManagedAccess" : false,
          "attributes" : { },
          "uris" : [ "/*" ]
        } ],
        "policies" : [ {
          "name" : "Default Policy",
          "description" : "A policy that grants access only for users within this realm",
          "type" : "regex",
          "logic" : "POSITIVE",
          "decisionStrategy" : "AFFIRMATIVE",
          "config" : {
            "targetContextAttributes" : "false",
            "pattern" : ".*",
            "targetClaim" : "sub"
          }
        }, {
          "name" : "Default Permission",
          "description" : "A permission that applies to the default resource type",
          "type" : "resource",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "defaultResourceType" : "urn:booking-service:resources:default",
            "applyPolicies" : "[\"Default Policy\"]"
          }
        } ],
        "scopes" : [ ],
        "decisionStrategy" : "UNANIMOUS"
      }
    }, {
      "id" : "c45c59f7-e41d-478b-aa7e-36385044951b",
      "clientId" : "broker",
      "name" : "${client_broker}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "b2aea8a5-0e50-4ce2-b2a1-184d89d8ff73",
      "clientId" : "concert-service",
      "name" : "client_concert-service",
      "description" : "Client for Concert Backend Service.",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "ggj3eeGCjmgFsk8Yob5l3PiJ4hieDyod",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : true,
      "authorizationServicesEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "client.secret.creation.time" : "1751956624",
        "request.object.signature.alg" : "any",
        "request.object.encryption.alg" : "any",
        "client.introspection.response.allow.jwt.claim.enabled" : "false",
        "standard.token.exchange.enabled" : "false",
        "frontchannel.logout.session.required" : "true",
        "post.logout.redirect.uris" : "+",
        "oauth2.device.authorization.grant.enabled" : "false",
        "use.jwks.url" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false",
        "use.refresh.tokens" : "true",
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.use.lightweight.access.token.enabled" : "false",
        "backchannel.logout.session.required" : "true",
        "request.object.required" : "not required",
        "client_credentials.use_refresh_token" : "false",
        "access.token.header.type.rfc9068" : "false",
        "tls.client.certificate.bound.access.tokens" : "false",
        "require.pushed.authorization.requests" : "false",
        "acr.loa.map" : "{}",
        "display.on.consent.screen" : "false",
        "request.object.encryption.enc" : "any",
        "token.response.type.bearer.lower-case" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "service_account", "acr", "client_roles", "roles", "profile", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ],
      "authorizationSettings" : {
        "allowRemoteResourceManagement" : true,
        "policyEnforcementMode" : "ENFORCING",
        "resources" : [ {
          "name" : "Default Resource",
          "type" : "urn:concert-service:resources:default",
          "ownerManagedAccess" : false,
          "attributes" : { },
          "uris" : [ "/*" ]
        } ],
        "policies" : [ {
          "name" : "Allow US Organizers",
          "description" : "",
          "type" : "group",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "groups" : "[]",
            "groupsClaim" : "groups"
          }
        }, {
          "name" : "Allow VN Organizers",
          "description" : "",
          "type" : "group",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "groups" : "[]",
            "groupsClaim" : "groups"
          }
        }, {
          "name" : "Allow All Customers",
          "description" : "",
          "type" : "group",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "groups" : "[]",
            "groupsClaim" : "groups"
          }
        }, {
          "name" : "Allow Concert Editor",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[]"
          }
        }, {
          "name" : "Allow Concert Approver",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[{\"id\":\"concert-service/concert:approve\",\"required\":false}]"
          }
        }, {
          "name" : "Allow Concert Viewer",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[{\"id\":\"concert-service/concert:view\",\"required\":false}]"
          }
        }, {
          "name" : "Allow Global Admin",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[{\"id\":\"global_admin\",\"required\":false}]"
          }
        }, {
          "name" : "Allow Organizer Admin US",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[]"
          }
        }, {
          "name" : "Default Policy",
          "description" : "A policy that grants access only for users within this realm",
          "type" : "regex",
          "logic" : "POSITIVE",
          "decisionStrategy" : "AFFIRMATIVE",
          "config" : {
            "targetContextAttributes" : "false",
            "pattern" : ".*",
            "targetClaim" : "sub"
          }
        }, {
          "name" : "Allow Concert Creator",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[{\"id\":\"concert-service/concert:create\",\"required\":true}]"
          }
        }, {
          "name" : "Allow Organizer Admin VN",
          "description" : "",
          "type" : "role",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "fetchRoles" : "false",
            "roles" : "[]"
          }
        }, {
          "name" : "Default Permission",
          "description" : "A permission that applies to the default resource type",
          "type" : "resource",
          "logic" : "POSITIVE",
          "decisionStrategy" : "UNANIMOUS",
          "config" : {
            "defaultResourceType" : "urn:concert-service:resources:default",
            "applyPolicies" : "[\"Default Policy\"]"
          }
        } ],
        "scopes" : [ ],
        "decisionStrategy" : "UNANIMOUS"
      }
    }, {
      "id" : "ac69bb4c-63d3-42fa-ac7b-a5553d56183b",
      "clientId" : "realm-management",
      "name" : "${client_realm-management}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "true",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "a8a2ed60-2535-4e83-88c0-99a78d526834",
      "clientId" : "security-admin-console",
      "name" : "${client_security-admin-console}",
      "rootUrl" : "${authAdminUrl}",
      "baseUrl" : "/admin/concertify/console/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/admin/concertify/console/*" ],
      "webOrigins" : [ "+" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "realm_client" : "false",
        "client.use.lightweight.access.token.enabled" : "true",
        "post.logout.redirect.uris" : "+",
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [ {
        "id" : "13fdc3ff-76a9-493b-a3c3-e833aa8ec750",
        "name" : "locale",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "locale",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "locale",
          "jsonType.label" : "String"
        }
      } ],
      "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }, {
      "id" : "2d0e232b-0cf9-4f6d-a6e2-33b3aa050104",
      "clientId" : "web-app",
      "name" : "client_web-app",
      "description" : "Client for Frontend Web App.",
      "rootUrl" : "",
      "adminUrl" : "",
      "baseUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [ "/*" ],
      "webOrigins" : [ "/*" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : true,
      "protocol" : "openid-connect",
      "attributes" : {
        "client.secret.creation.time" : "1751956778",
        "request.object.signature.alg" : "any",
        "request.object.encryption.alg" : "any",
        "client.introspection.response.allow.jwt.claim.enabled" : "false",
        "standard.token.exchange.enabled" : "false",
        "post.logout.redirect.uris" : "+",
        "frontchannel.logout.session.required" : "true",
        "oauth2.device.authorization.grant.enabled" : "false",
        "use.jwks.url" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false",
        "use.refresh.tokens" : "true",
        "realm_client" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "client.use.lightweight.access.token.enabled" : "false",
        "backchannel.logout.session.required" : "true",
        "request.object.required" : "not required",
        "client_credentials.use_refresh_token" : "false",
        "access.token.header.type.rfc9068" : "false",
        "tls.client.certificate.bound.access.tokens" : "false",
        "require.pushed.authorization.requests" : "false",
        "acr.loa.map" : "{}",
        "display.on.consent.screen" : "false",
        "request.object.encryption.enc" : "any",
        "token.response.type.bearer.lower-case" : "false"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [ "web-origins", "acr", "client_roles", "profile", "roles", "basic", "email" ],
      "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    } ],
    "clientScopes" : [ {
      "id" : "6fd032f5-2fda-45ea-a072-e2e480ea709b",
      "name" : "basic",
      "description" : "OpenID Connect scope for add all basic claims to the token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "ac7e898c-c762-4b4e-ba04-bd828f3c6fed",
        "name" : "sub",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-sub-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      }, {
        "id" : "c9de354a-3873-44a5-99cc-2339211a3a27",
        "name" : "auth_time",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "AUTH_TIME",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "auth_time",
          "jsonType.label" : "long"
        }
      } ]
    }, {
      "id" : "b9fb5256-6487-4c5f-b991-12836e13a52e",
      "name" : "client_roles",
      "description" : "",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "true",
        "gui.order" : "",
        "consent.screen.text" : ""
      },
      "protocolMappers" : [ {
        "id" : "34fad20b-ea01-4870-a07b-a6cc8a01ddc0",
        "name" : "Booking Service role",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-client-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "false",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "false",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "roles",
          "jsonType.label" : "String",
          "usermodel.clientRoleMapping.clientId" : "booking-service"
        }
      }, {
        "id" : "c492e661-9a66-493f-9af0-d14d19603f50",
        "name" : "Realm role",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-realm-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "false",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "false",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "roles",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "a2295369-7c90-4916-a9f9-649b910e03ef",
        "name" : "Concert Service role",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-client-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "false",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "false",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "roles",
          "jsonType.label" : "String",
          "usermodel.clientRoleMapping.clientId" : "concert-service"
        }
      }, {
        "id" : "6471f5a2-ecf7-4fa1-a113-7b57794c4299",
        "name" : "Auth Service role",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-client-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "false",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "false",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "roles",
          "jsonType.label" : "String",
          "usermodel.clientRoleMapping.clientId" : "auth-service"
        }
      } ]
    }, {
      "id" : "54471b16-e8ff-4b59-bcd8-2632f2c1afe7",
      "name" : "service_account",
      "description" : "Specific scope for a client enabled for service accounts",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "d2cee775-ff1a-4202-8d9b-13901771a3e7",
        "name" : "Client Host",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "clientHost",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientHost",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "40666284-c62b-4509-ae5d-34bc220fbcce",
        "name" : "Client ID",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "client_id",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "client_id",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "4ed9668c-9de7-4a5e-a1a1-867f398e819a",
        "name" : "Client IP Address",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "config" : {
          "user.session.note" : "clientAddress",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientAddress",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "5c33c69f-a7da-4f39-9ef7-2405d41b4bab",
      "name" : "acr",
      "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "cb6ced7f-891a-4112-a966-ac8473d817fe",
        "name" : "acr loa level",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-acr-mapper",
        "consentRequired" : false,
        "config" : {
          "id.token.claim" : "true",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "userinfo.token.claim" : "true"
        }
      } ]
    }, {
      "id" : "377c8004-7f73-47dd-81ed-c5a3e9716b69",
      "name" : "address",
      "description" : "OpenID Connect built-in scope: address",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${addressScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "94b696fc-ada8-4252-a98c-80922a6270ed",
        "name" : "address",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-address-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute.formatted" : "formatted",
          "user.attribute.country" : "country",
          "introspection.token.claim" : "true",
          "user.attribute.postal_code" : "postal_code",
          "userinfo.token.claim" : "true",
          "user.attribute.street" : "street",
          "id.token.claim" : "true",
          "user.attribute.region" : "region",
          "access.token.claim" : "true",
          "user.attribute.locality" : "locality"
        }
      } ]
    }, {
      "id" : "a5aba7b8-a0b6-4e0b-9cfb-f6a93b613d4a",
      "name" : "microprofile-jwt",
      "description" : "Microprofile - JWT built-in scope",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "8da32319-68b6-440a-beff-bd188263d809",
        "name" : "groups",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-realm-role-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "foo",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "groups",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "9e6373fc-e6ad-4b30-95c7-b6ff34c28b04",
        "name" : "upn",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "username",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "upn",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "d403bdb2-6483-450f-b32b-e27fe08f7f28",
      "name" : "role_list",
      "description" : "SAML role list",
      "protocol" : "saml",
      "attributes" : {
        "consent.screen.text" : "${samlRoleListScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "4940254a-8984-4241-9a9a-b8edc2a8c473",
        "name" : "role list",
        "protocol" : "saml",
        "protocolMapper" : "saml-role-list-mapper",
        "consentRequired" : false,
        "config" : {
          "single" : "false",
          "attribute.nameformat" : "Basic",
          "attribute.name" : "Role"
        }
      } ]
    }, {
      "id" : "9eb8d569-795c-4f75-9375-548a6d04f880",
      "name" : "email",
      "description" : "OpenID Connect built-in scope: email",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${emailScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "2b62f5fe-9be3-43e1-8612-c9c668cc3e15",
        "name" : "email",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "email",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "email",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "8bad480c-81b9-45a4-940c-6f61e02baf96",
        "name" : "email verified",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "emailVerified",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "email_verified",
          "jsonType.label" : "boolean"
        }
      } ]
    }, {
      "id" : "43830113-f328-4884-a3d5-b83ae0032e57",
      "name" : "organization",
      "description" : "Additional claims about the organization a subject belongs to",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${organizationScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "85553a09-cc18-4548-8698-b4677002046c",
        "name" : "organization",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-organization-membership-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "multivalued" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "organization",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "8a663ab6-7109-4578-8e49-fb3be956bdd3",
      "name" : "offline_access",
      "description" : "OpenID Connect built-in scope: offline_access",
      "protocol" : "openid-connect",
      "attributes" : {
        "consent.screen.text" : "${offlineAccessScopeConsentText}",
        "display.on.consent.screen" : "true"
      }
    }, {
      "id" : "ae299caa-da96-4b58-a183-a8cc342f0ef2",
      "name" : "saml_organization",
      "description" : "Organization Membership",
      "protocol" : "saml",
      "attributes" : {
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "05630758-f2d2-440a-9a41-9a503ae6b60c",
        "name" : "organization",
        "protocol" : "saml",
        "protocolMapper" : "saml-organization-membership-mapper",
        "consentRequired" : false,
        "config" : { }
      } ]
    }, {
      "id" : "f2e27f26-e099-4de0-ab49-d36fb47508d2",
      "name" : "profile",
      "description" : "OpenID Connect built-in scope: profile",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${profileScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "5d41d3a2-a56e-4186-a716-6fe7e773e45c",
        "name" : "profile",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "profile",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "profile",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "d65894d1-fd84-4185-93d1-44c632f3f5a3",
        "name" : "given name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "firstName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "given_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "be57d1c7-03de-4abc-a6b9-dfce30356d2c",
        "name" : "nickname",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "nickname",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "nickname",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "180f743b-9253-461c-b349-6cf0abdf07ec",
        "name" : "gender",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "gender",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "gender",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "315595ab-9f94-4b56-9524-c6b2d4ee97fc",
        "name" : "picture",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "picture",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "picture",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "647bec9d-4e87-4c9d-9db7-28202f13b62b",
        "name" : "groups",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-group-membership-mapper",
        "consentRequired" : false,
        "config" : {
          "full.path" : "true",
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "id.token.claim" : "true",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "groups"
        }
      }, {
        "id" : "12ca0b77-f9d1-4f43-8a31-f91a09141f2c",
        "name" : "username",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "username",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "preferred_username",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "c9d65ce3-0a27-4bf9-9194-b05df8af4c75",
        "name" : "updated at",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "updatedAt",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "updated_at",
          "jsonType.label" : "long"
        }
      }, {
        "id" : "4a2f4d37-b2b5-4cbf-9703-3d4802983e98",
        "name" : "zoneinfo",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "zoneinfo",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "zoneinfo",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "14f6a2f4-82e3-47cf-a8ba-5c87640c5dd2",
        "name" : "website",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "website",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "website",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "7a183eb1-815a-413f-8877-0d9811901cb1",
        "name" : "full name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-full-name-mapper",
        "consentRequired" : false,
        "config" : {
          "id.token.claim" : "true",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "userinfo.token.claim" : "true"
        }
      }, {
        "id" : "85588511-04b2-4be7-85b1-4ea86c7d9a8f",
        "name" : "family name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "lastName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "family_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "b9406a44-f8c6-47a6-a5b7-5314eed7b686",
        "name" : "middle name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "middleName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "middle_name",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "8fcb7c95-1eee-4a50-8bc7-40767bcde9a5",
        "name" : "birthdate",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "birthdate",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "birthdate",
          "jsonType.label" : "String"
        }
      }, {
        "id" : "0377a8ba-d521-4a67-915e-a789e736fdc8",
        "name" : "locale",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "locale",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "locale",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "6f2c641c-2b0d-4ecb-a74f-5b4a6d84e393",
      "name" : "web-origins",
      "description" : "OpenID Connect scope for add allowed web origins to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "consent.screen.text" : "",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [ {
        "id" : "fc867bdf-b01d-4c6b-8f33-70ef57410ac3",
        "name" : "allowed web origins",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-allowed-origins-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      } ]
    }, {
      "id" : "953d8a5a-1293-4b1c-b8bc-ab20951103c3",
      "name" : "phone",
      "description" : "OpenID Connect built-in scope: phone",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "consent.screen.text" : "${phoneScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "96197cc6-843f-49d5-a66d-c4907ae1dc8c",
        "name" : "phone number verified",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "userinfo.token.claim" : "true",
          "user.attribute" : "phoneNumberVerified",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "phone_number_verified",
          "jsonType.label" : "boolean"
        }
      }, {
        "id" : "be27663c-9eb9-49a3-8db6-1b15da63760b",
        "name" : "phone number",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "aggregate.attrs" : "false",
          "introspection.token.claim" : "true",
          "multivalued" : "false",
          "userinfo.token.claim" : "true",
          "user.attribute" : "phone",
          "id.token.claim" : "true",
          "lightweight.claim" : "false",
          "access.token.claim" : "true",
          "claim.name" : "phone_number",
          "jsonType.label" : "String"
        }
      } ]
    }, {
      "id" : "fd129b37-0ecb-4ee2-b23a-08b136e4492d",
      "name" : "roles",
      "description" : "OpenID Connect scope for add user roles to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "consent.screen.text" : "${rolesScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [ {
        "id" : "9618fa24-9a09-4dfb-86d7-b3d84353c008",
        "name" : "audience resolve",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-audience-resolve-mapper",
        "consentRequired" : false,
        "config" : {
          "introspection.token.claim" : "true",
          "access.token.claim" : "true"
        }
      }, {
        "id" : "b0b86412-2987-4c18-887e-a3405afbe102",
        "name" : "realm roles",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-realm-role-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute" : "foo",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "realm_access.roles",
          "jsonType.label" : "String",
          "multivalued" : "true"
        }
      }, {
        "id" : "8ee38cf0-9cc9-462b-ada3-473b383c6268",
        "name" : "client roles",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-client-role-mapper",
        "consentRequired" : false,
        "config" : {
          "user.attribute" : "foo",
          "introspection.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "resource_access.${client_id}.roles",
          "jsonType.label" : "String",
          "multivalued" : "true"
        }
      } ]
    } ],
    "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "web-origins", "acr", "basic", "client_roles" ],
    "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
    "browserSecurityHeaders" : {
      "contentSecurityPolicyReportOnly" : "",
      "xContentTypeOptions" : "nosniff",
      "referrerPolicy" : "no-referrer",
      "xRobotsTag" : "none",
      "xFrameOptions" : "SAMEORIGIN",
      "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
    },
    "smtpServer" : { },
    "eventsEnabled" : false,
    "eventsListeners" : [ "jboss-logging" ],
    "enabledEventTypes" : [ ],
    "adminEventsEnabled" : false,
    "adminEventsDetailsEnabled" : false,
    "identityProviders" : [ ],
    "identityProviderMappers" : [ ],
    "components" : {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
        "id" : "ce0c1514-cc7d-495b-b758-d075f138834b",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper" ]
        }
      }, {
        "id" : "f67d9947-c7dd-4aed-bfda-b7d7c08df900",
        "name" : "Full Scope Disabled",
        "providerId" : "scope",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "e6bb767c-0b8d-4b78-b823-439f5ae0c03a",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      }, {
        "id" : "943714cc-d67c-4c7c-8f81-ac9249c711a1",
        "name" : "Trusted Hosts",
        "providerId" : "trusted-hosts",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "host-sending-registration-request-must-match" : [ "true" ],
          "client-uris-must-match" : [ "true" ]
        }
      }, {
        "id" : "d844e935-9801-4347-9ae0-9c92f23127d0",
        "name" : "Max Clients Limit",
        "providerId" : "max-clients",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "max-clients" : [ "200" ]
        }
      }, {
        "id" : "d81279ee-e6e8-49e6-9349-3ac4c244ff67",
        "name" : "Consent Required",
        "providerId" : "consent-required",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "a68bbb16-c204-417e-a690-6d4b50d68418",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      }, {
        "id" : "5c33e9b4-988d-4d29-99d7-2d399a980b42",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper" ]
        }
      } ],
      "org.keycloak.userprofile.UserProfileProvider" : [ {
        "id" : "f2765c67-5571-47f8-b3c2-4d70ffbc6048",
        "providerId" : "declarative-user-profile",
        "subComponents" : { },
        "config" : {
          "kc.user.profile.config" : [ "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}" ]
        }
      } ],
      "org.keycloak.keys.KeyProvider" : [ {
        "id" : "ceda7fad-2ab6-4722-b1fc-36de3a7e31b0",
        "name" : "rsa-generated",
        "providerId" : "rsa-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEogIBAAKCAQEAofMazU54lEeucO5BtEbK0uDUpzwpQ0JeJEk3Wy3rcvfqfFt4Y1EZyQGnX55022SpeSXvcyOe7rlnESs0RE5uUsFeu24a00Y0ABxPsvZBCpx4GyIWL+TO0RC6HzE98ehiNFvidvMwIXT0kH9w6DiJ8oeK958/70YWA63lAMG9CByu0g01v+FSLo2D6UhE1WmoNr0efv71FFKTwoGvhVqgkMtzlTvsA6xUr61meGAPZM+t3sdCrrrS3JtwQdvk1/1LCqcpAZACJnWBd7M+V2KLn05eNZXH5Sr3WIEJYFZCC38aTIvCKzZaVO84fqJGkn9Vka90w8cdyhz4BEUL5MCG0wIDAQABAoIBAAlXkTm7p5gCJI1uKQshtEyC3LGC9mxjVTPpp1BSr0zUAUpIKoMsJ/0g48tPxDTtsxsCdbQiH2Zs+oWShPLVxWZvsivEt7ZtS82f1Hch3nGiwgjqp/X+UHHd8aaf/A9K1PNpQ4CSGbosWXlGaLh0nnyHlhwfqxv94oI200l+Y42mpm31OvQzZhX0saiJxLUmfU1bBcfbtacZP9OEm6ZIpGwtMHkgXUzJrNVbENpsjtW9EPZlUh9Hd7FlRcD6rXgdkOV0WRzCXqPE9mczCL4g2oOTuPtAptWYDowgGOCZ8rqgC3fbkAGTLFtyR/abXBCF2B+INH8dmPyXeMY2haSwiNUCgYEAz9U5ZfdEyF7peeYZlrhs0Zn+4CZ7s0+d5JIzXa4KpqBw3zfELrFxYozE8RcilyK3CAf3m1UNNYt36GIj6gH07O4CSUoGVCefTsv1MJw9HTNB833MS45nd4PlgkR34gKDcPk5237TSJafH7HWVLwPlFJELum/dOo+kKHJQ909dV8CgYEAx3udVxWuogeFdSg6WC/vTGF4P/qgEbynfBzgPHM+DS62bRGJC8KBQrdZH6b1rGEd6oFvoZ8dYasitUKoAJseEdzFeX4VAxIyUFHJOw5LemDtVNBB4PK4hRDuwBy6F0T194tATdz2BHaGT0BMUos+g/kkPKeKlNoDn3DjDs/fDw0CgYAnNYbaocesNZu+j5aMRMbi1DatexUjQwX6tUpThh4kSWiB9Ddix78oZH5TLZYtBTOapEYmW+leDK3WfY1g/HWErXJo+Towbjkz2G6teQxekekDUtxT9M24Un3eEaS8UtURXzN3IXoi26exhw90dPZLeSm74AVqvTaIer1JvFd36QKBgBXik/J36H7SQGwIC86dA63ni5/JSUJo5h8Rs/At3ILpuw3gPJ7Tqga9wsNcN9u/k96kcLDUmg6bDeXA+FmIqxXemLOph3icyHRTZLZb7R/x/letuWyKdH/0yZy+ChR/dlTALD/enAcFUdrj/PuZVzR3YuhcoTGPcZJOejqnx5sJAoGAYcOupHbFvu1d9tk49n3VM0Uasn/MSwQ0EQkWCC+WnfEWOh1uucfM5w7DSEPf929VXrrXHLeQeE5vRivgM1e3AETrd+l9D7AYwFKcbz9Bjd/kAEz6s2btkqdqD2vMdjgkzIkvHKmFSXU4/Nn1arRMy6KXdf/Ddf40VlC55S2Na64=" ],
          "keyUse" : [ "SIG" ],
          "certificate" : [ "MIICqzCCAZMCBgGX6E5CyjANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5jb25jZXJ0LWdsb2JhbDAeFw0yNTA3MDgwNDMwMzJaFw0zNTA3MDgwNDMyMTJaMBkxFzAVBgNVBAMMDmNvbmNlcnQtZ2xvYmFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAofMazU54lEeucO5BtEbK0uDUpzwpQ0JeJEk3Wy3rcvfqfFt4Y1EZyQGnX55022SpeSXvcyOe7rlnESs0RE5uUsFeu24a00Y0ABxPsvZBCpx4GyIWL+TO0RC6HzE98ehiNFvidvMwIXT0kH9w6DiJ8oeK958/70YWA63lAMG9CByu0g01v+FSLo2D6UhE1WmoNr0efv71FFKTwoGvhVqgkMtzlTvsA6xUr61meGAPZM+t3sdCrrrS3JtwQdvk1/1LCqcpAZACJnWBd7M+V2KLn05eNZXH5Sr3WIEJYFZCC38aTIvCKzZaVO84fqJGkn9Vka90w8cdyhz4BEUL5MCG0wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBu/SBvXapLsog9Q45+wjGcGnlR7SduORzf8zbEgTFKjjbBdBy+dcTBfeZqWiinwU2/BkJk6WXUxL1AXyog7n18esLFtQQW6Pra5XbfcCzSO10Gp69oxp30sPkRAJhwbgu+8X9xIV1cxBXCtAKG1kn8NDhZ+nJVGoJnYXfRKJsy7A1W35UsZZPfL5+OCzvoEg3a0XTO3ZP/0uLbuSTgfosVgZR6NHDPYctTUsKBOd3fWw96Mxyx8RUwj38HTGSQAbr2r0ZqZZuqcRKLSUWjgMilEoDsoZ1jH//aKg0uEqjUovqsjMeqljb6KJ3ijFbQ6WvRCyzilm3pCbZj5yXDm81d" ],
          "priority" : [ "100" ]
        }
      }, {
        "id" : "8ce0a275-a67b-4300-b50c-195db0a98235",
        "name" : "aes-generated",
        "providerId" : "aes-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "da9c9478-4d02-4686-9f51-777860672a68" ],
          "secret" : [ "iRafIrPn97vXK_dgoaPPbA" ],
          "priority" : [ "100" ]
        }
      }, {
        "id" : "7a99740d-779c-4645-b7bb-15ea0c2c225c",
        "name" : "hmac-generated-hs512",
        "providerId" : "hmac-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "dbdf597a-bcda-49df-883c-281b952b9647" ],
          "secret" : [ "jRB6900ks-vFPCmdbeowhUC5ZeYJY8tahjF9ONlj5dazZlCUJMb1KwvM0RuKEOBLIlY9slHaD83bx-h-B1XDZlQhG2woaKVjNW1FC-mtmGl8jLGgkQ8iwdvMmIKHdFS-oHoZbCoRpiMUyU0rx4ucTAlNa6ZZKwdoYAUmwjOs3qA" ],
          "priority" : [ "100" ],
          "algorithm" : [ "HS512" ]
        }
      }, {
        "id" : "4074877b-dcac-46cc-9473-b346c9ca0168",
        "name" : "rsa-enc-generated",
        "providerId" : "rsa-enc-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEowIBAAKCAQEAmtBQGQhUAAbDY1uMEAqt6QOlZXBEjuK9czU+KzFsH9utBHrxMy0vS/hSr+2kNKdRCMgaUo8nHcCSqawINYn5VhOznkxnVY9XXimKPf7B9UZGnCgJOWyzw/0GSKHIwx9mlQRfc5XlmDMxtb2lTAMdmq2I5goUHygYYbk+pqMbIzYR92Wop/qTwTHYd5XkxTbA2crWgffNghkyAvWmVBnMBL5cCBL/gKiHJsYkRzHxLGEzEXwZZLWYgwoXGy2b1bvD/6TjTNY3NFDZT9F63l532cCPKIFDrxaXp0COxBpKrC+r4YgU+KUCO0WJlXprIv/4nkVxZFCDJP3NB8rVnmfiwQIDAQABAoIBAADfOymELwIQ16++AS/BoeSLbnp7/pqc/k33ZfqzBZzHg1fEchKCnNDqVrPEgoKYefrbEs8B5PGecSQKDMn5iW5CtD34MGuAcCSm3nc8VbEQH7mJSiGi8B92p877xG1dDlY44glQ/gAGqysuyLslFAkIFNql+jpxgrtFjnvMhLyI0xyAn64cp/135g2c8Od/9M/MG2EOR32o+ZJtz5T5eRUmT6klbSA1nFhlLPWV3nALDHVkHgU2gdnfQ/ZxaGYiSgIF4cBMiQ+PqTvMUOncsPxSfce/AhMU5TyeXXyz5gozzBD8N44gDN6RhD4gMg5r7tE9XflhBI7iGiwY6PEnLIECgYEAya0W3Fe1xnLUkq5KGrwzsCpLWpXeQb3kIQcvRb4kq5AHvCwnbdYPX4WrjLSa8NDtPeyDRrr6GGRamATsf1ODaDjWxxIcx7IB2xKuD8yKoZ0O2cXcB0+6Hozyo+ElzJVYkfa7+zwIypCbhxSEv40jvZW1BuiXPEfFDUz/oHJ0XIECgYEAxIO/s5tKl+2qVYBPFQdXpsh0mgJgiFoSKk8QzVUyNoI+zTny23DwQoJejwa1SGQLZmlOJEzDI4jDyZ+5A0DpTGEDNiSSajrdY+MOkyMBcVg+jzJ8RSnMUWPU5JvXiHnXqZ+HcsFheraWPvTcXHSnzY6beNf8oi685gmOxRWBZkECgYB3JK+VuqdjtqEIiriytK6gi0v7FwC3u/QS4wi1XhCR3kQDkd41UDnCx9hCBsxmKjeN1rTzSzDGyjqPBpGk4vSF1NZlwriH7QyVnKKCKOdZdMy6MN683wfoVoJd+Hv5Md2iVa5WTPAwo1+OXLvT4hDURqYsj6oQ7aFnKy71XciKgQKBgQCfhM8FbcZ0Y5GETF5llIs7MLcuGUXhCTR7sajS9RiIlNuD3klchmYRpyA4+9oGRGfYnxy2bLVuz+MWdRhLItL+lDV2KuPLZbM3FSZMm/rc1iQaO4IS5qYbX21+kV65QyakY4IgzgdiBHsb6cpDJtLcEqnzw2gpAsWF+jYxl45twQKBgGxk8VF4FKhi/BJk1oksSUL5+CFiE/Gsh+ymJiEcouck5JnguvqqamqzGnwZK9UfgpjAwD6Dmaw2ODOQ8wq4HurltDxNmbfoeXbHrEZ6U7x3GXhD4AhUAxipSgEFlmEU33LuBtKsS3c+rQ/nq3Z3Mcfn1jeoJfjDuRA7VfT0Dfe2" ],
          "keyUse" : [ "ENC" ],
          "certificate" : [ "MIICqzCCAZMCBgGX6E5DXDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5jb25jZXJ0LWdsb2JhbDAeFw0yNTA3MDgwNDMwMzJaFw0zNTA3MDgwNDMyMTJaMBkxFzAVBgNVBAMMDmNvbmNlcnQtZ2xvYmFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmtBQGQhUAAbDY1uMEAqt6QOlZXBEjuK9czU+KzFsH9utBHrxMy0vS/hSr+2kNKdRCMgaUo8nHcCSqawINYn5VhOznkxnVY9XXimKPf7B9UZGnCgJOWyzw/0GSKHIwx9mlQRfc5XlmDMxtb2lTAMdmq2I5goUHygYYbk+pqMbIzYR92Wop/qTwTHYd5XkxTbA2crWgffNghkyAvWmVBnMBL5cCBL/gKiHJsYkRzHxLGEzEXwZZLWYgwoXGy2b1bvD/6TjTNY3NFDZT9F63l532cCPKIFDrxaXp0COxBpKrC+r4YgU+KUCO0WJlXprIv/4nkVxZFCDJP3NB8rVnmfiwQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBXQ22hSizH/PuaCmZhUrcM40ZGfqshqzyaRdlXBqNJKJiL2Su4guvQ7CgEHO/i9EW6dYeQ5vRemHWPVZd9NLFu9EJ9kNO5b0t8nVRSvJJk/J7+3GD03OrsomLYFVO3/y3NZ4kVy5Nhfe358A5/PcH6NswxcDYm0DUxFwcj5pLWiIShMMYxGD3ob62sttGggG+Wsa9wSjAJmysLCGF+XpdAihtIRJEsGgSisghh9zisndcTAeHlUx61+70xhooIuB9JFqFCearHHmohvMryq1vzhE1WgYZiyXbaKew0YX1HoZ+X9z8HfY02rw9iRZlnACKj9oEIDNkUMf00ja3DIyhi" ],
          "priority" : [ "100" ],
          "algorithm" : [ "RSA-OAEP" ]
        }
      } ]
    },
    "internationalizationEnabled" : false,
    "supportedLocales" : [ ],
    "authenticationFlows" : [ {
      "id" : "6b4ddd05-1cc8-4242-8bfb-1280eeb395fb",
      "alias" : "Account verification options",
      "description" : "Method with which to verity the existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-email-verification",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Verify Existing Account by Re-authentication",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "9635dfff-4118-4db7-8f0c-a240dfe43521",
      "alias" : "Browser - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "04cc7794-9c05-449e-8bb6-460398a0af15",
      "alias" : "Browser - Conditional Organization",
      "description" : "Flow to determine if the organization identity-first login is to be used",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "organization",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "283eca14-d223-420c-8b4e-a1c08dd733dc",
      "alias" : "Direct Grant - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "a73ed54b-3143-44d8-afee-3526847fdaa1",
      "alias" : "First Broker Login - Conditional Organization",
      "description" : "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "idp-add-organization-member",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "1634b7c0-66e1-4a67-b382-dd2c1b37b10f",
      "alias" : "First broker login - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "5e6ddc95-ea3d-41f5-90e6-24cb79871789",
      "alias" : "Handle Existing Account",
      "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-confirm-link",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Account verification options",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "143d7566-422e-4fcf-bb10-a1b0ac19c5d8",
      "alias" : "Organization",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 10,
        "autheticatorFlow" : true,
        "flowAlias" : "Browser - Conditional Organization",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "4c7e4bdb-8e23-4275-b585-2ce5fcd0f7d4",
      "alias" : "Reset - Conditional OTP",
      "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "7a033bd3-2c11-4d62-a786-2201046a4e73",
      "alias" : "User creation or linking",
      "description" : "Flow for the existing/non-existing user alternatives",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "create unique user config",
        "authenticator" : "idp-create-user-if-unique",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Handle Existing Account",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "1ded7969-4c9c-462f-abc7-48cf1272c802",
      "alias" : "Verify Existing Account by Re-authentication",
      "description" : "Reauthentication of existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "First broker login - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "65acde8c-57b5-42e1-a8d9-d3ea5a9b91a0",
      "alias" : "browser",
      "description" : "Browser based authentication",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-cookie",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-spnego",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "identity-provider-redirector",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 25,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 26,
        "autheticatorFlow" : true,
        "flowAlias" : "Organization",
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "forms",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "5cc449e6-c9d7-4eb7-8ac4-3710531e315c",
      "alias" : "clients",
      "description" : "Base authentication for clients",
      "providerId" : "client-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "client-secret",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-secret-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-x509",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 40,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "c06c5201-b790-4cc1-b319-d2584860b85a",
      "alias" : "direct grant",
      "description" : "OpenID Connect Resource Owner Grant",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "direct-grant-validate-username",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "Direct Grant - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "b6c689ac-d950-482d-8e17-9a09ec9a2f4c",
      "alias" : "docker auth",
      "description" : "Used by Docker clients to authenticate against the IDP",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "docker-http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "d49252c8-4d04-4678-8a6a-78a8cda6c811",
      "alias" : "first broker login",
      "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "review profile config",
        "authenticator" : "idp-review-profile",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "User creation or linking",
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 50,
        "autheticatorFlow" : true,
        "flowAlias" : "First Broker Login - Conditional Organization",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "21e3a9c7-dca3-4851-bbd8-2a02ad6e357e",
      "alias" : "forms",
      "description" : "Username, password, otp and other auth forms.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Browser - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "557687eb-ed69-4eee-9c7c-6a0646a2d2e9",
      "alias" : "registration",
      "description" : "Registration flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-page-form",
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : true,
        "flowAlias" : "registration form",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "8e639df3-74d6-47d9-801d-5f9385ef7120",
      "alias" : "registration form",
      "description" : "Registration form",
      "providerId" : "form-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-user-creation",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-password-action",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 50,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-recaptcha-action",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 60,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-terms-and-conditions",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 70,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "70877935-5499-4600-b7f8-2e75a974de8a",
      "alias" : "reset credentials",
      "description" : "Reset credentials for a user if they forgot their password or something",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "reset-credentials-choose-user",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-credential-email",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 40,
        "autheticatorFlow" : true,
        "flowAlias" : "Reset - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "f9e51c3a-bcd3-4a75-9b09-9ca1ad53911c",
      "alias" : "saml ecp",
      "description" : "SAML ECP Profile Authentication Flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    } ],
    "authenticatorConfig" : [ {
      "id" : "dcc94f10-9388-4c93-aeea-f8bf1afd5b02",
      "alias" : "create unique user config",
      "config" : {
        "require.password.update.after.registration" : "false"
      }
    }, {
      "id" : "11d54aaa-11c0-4624-ad2d-af7293897206",
      "alias" : "review profile config",
      "config" : {
        "update.profile.on.first.login" : "missing"
      }
    } ],
    "requiredActions" : [ {
      "alias" : "CONFIGURE_TOTP",
      "name" : "Configure OTP",
      "providerId" : "CONFIGURE_TOTP",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 10,
      "config" : { }
    }, {
      "alias" : "TERMS_AND_CONDITIONS",
      "name" : "Terms and Conditions",
      "providerId" : "TERMS_AND_CONDITIONS",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 20,
      "config" : { }
    }, {
      "alias" : "UPDATE_PASSWORD",
      "name" : "Update Password",
      "providerId" : "UPDATE_PASSWORD",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 30,
      "config" : { }
    }, {
      "alias" : "UPDATE_PROFILE",
      "name" : "Update Profile",
      "providerId" : "UPDATE_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 40,
      "config" : { }
    }, {
      "alias" : "VERIFY_EMAIL",
      "name" : "Verify Email",
      "providerId" : "VERIFY_EMAIL",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 50,
      "config" : { }
    }, {
      "alias" : "delete_account",
      "name" : "Delete Account",
      "providerId" : "delete_account",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 60,
      "config" : { }
    }, {
      "alias" : "webauthn-register",
      "name" : "Webauthn Register",
      "providerId" : "webauthn-register",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 70,
      "config" : { }
    }, {
      "alias" : "webauthn-register-passwordless",
      "name" : "Webauthn Register Passwordless",
      "providerId" : "webauthn-register-passwordless",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 80,
      "config" : { }
    }, {
      "alias" : "VERIFY_PROFILE",
      "name" : "Verify Profile",
      "providerId" : "VERIFY_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 90,
      "config" : { }
    }, {
      "alias" : "delete_credential",
      "name" : "Delete Credential",
      "providerId" : "delete_credential",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 100,
      "config" : { }
    }, {
      "alias" : "update_user_locale",
      "name" : "Update User Locale",
      "providerId" : "update_user_locale",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 1000,
      "config" : { }
    } ],
    "browserFlow" : "browser",
    "registrationFlow" : "registration",
    "directGrantFlow" : "direct grant",
    "resetCredentialsFlow" : "reset credentials",
    "clientAuthenticationFlow" : "clients",
    "dockerAuthenticationFlow" : "docker auth",
    "firstBrokerLoginFlow" : "first broker login",
    "attributes" : {
      "cibaBackchannelTokenDeliveryMode" : "poll",
      "cibaExpiresIn" : "120",
      "cibaAuthRequestedUserHint" : "login_hint",
      "oauth2DeviceCodeLifespan" : "600",
      "clientOfflineSessionMaxLifespan" : "0",
      "oauth2DevicePollingInterval" : "5",
      "clientSessionIdleTimeout" : "0",
      "parRequestUriLifespan" : "60",
      "clientSessionMaxLifespan" : "0",
      "clientOfflineSessionIdleTimeout" : "0",
      "cibaInterval" : "5",
      "realmReusableOtpCode" : "false"
    },
    "keycloakVersion" : "26.2.5",
    "userManagedAccessAllowed" : false,
    "organizationsEnabled" : false,
    "verifiableCredentialsEnabled" : false,
    "adminPermissionsEnabled" : false,
    "clientProfiles" : {
      "profiles" : [ ]
    },
    "clientPolicies" : {
      "policies" : [ ]
    }
  }

]